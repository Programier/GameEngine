#pragma once

// Do not edit this file is generated from slang-cpp-extractor tool

namespace Slang {

enum class ASTNodeType
{
NodeBase = 0,
    Scope = 1,
    SyntaxNodeBase = 2,
        SyntaxNode = 3,
            Modifier = 4,
                InModifier = 5,
                OutModifier = 6,
                    InOutModifier = 7,
                ConstModifier = 8,
                BuiltinModifier = 9,
                InlineModifier = 10,
                VisibilityModifier = 11,
                    PublicModifier = 12,
                    PrivateModifier = 13,
                    InternalModifier = 14,
                RequireModifier = 15,
                ParamModifier = 16,
                ExternModifier = 17,
                HLSLExportModifier = 18,
                TransparentModifier = 19,
                FromStdLibModifier = 20,
                PrefixModifier = 21,
                PostfixModifier = 22,
                ExportedModifier = 23,
                ConstExprModifier = 24,
                GloballyCoherentModifier = 25,
                ExternCppModifier = 26,
                GLSLPrecisionModifier = 27,
                GLSLModuleModifier = 28,
                ToBeSynthesizedModifier = 29,
                SynthesizedModifier = 30,
                ExtensionExternVarModifier = 31,
                ActualGlobalModifier = 32,
                IgnoreForLookupModifier = 33,
                IntrinsicOpModifier = 34,
                TargetIntrinsicModifier = 35,
                SpecializedForTargetModifier = 36,
                RequiredGLSLExtensionModifier = 37,
                RequiredGLSLVersionModifier = 38,
                RequiredSPIRVVersionModifier = 39,
                RequiredCUDASMVersionModifier = 40,
                RefModifier = 41,
                ConstRefModifier = 42,
                SharedModifiers = 43,
                GLSLLayoutModifier = 44,
                    GLSLParsedLayoutModifier = 45,
                        GLSLConstantIDLayoutModifier = 46,
                        GLSLLocationLayoutModifier = 47,
                        GLSLBufferDataLayoutModifier = 48,
                            GLSLStd140Modifier = 49,
                            GLSLStd430Modifier = 50,
                            GLSLScalarModifier = 51,
                    GLSLUnparsedLayoutModifier = 52,
                GLSLLayoutModifierGroupMarker = 53,
                    GLSLLayoutModifierGroupBegin = 54,
                    GLSLLayoutModifierGroupEnd = 55,
                SimpleModifier = 56,
                    GLSLWriteOnlyModifier = 57,
                    GLSLReadOnlyModifier = 58,
                    GLSLPatchModifier = 59,
                ImplicitParameterGroupVariableModifier = 60,
                ImplicitParameterGroupElementTypeModifier = 61,
                HLSLSemantic = 62,
                    HLSLLayoutSemantic = 63,
                        HLSLRegisterSemantic = 64,
                        HLSLPackOffsetSemantic = 65,
                    HLSLSimpleSemantic = 66,
                    RayPayloadAccessSemantic = 67,
                        RayPayloadReadSemantic = 68,
                        RayPayloadWriteSemantic = 69,
                GLSLPreprocessorDirective = 70,
                    GLSLVersionDirective = 71,
                    GLSLExtensionDirective = 72,
                ParameterGroupReflectionName = 73,
                BuiltinTypeModifier = 74,
                MagicTypeModifier = 75,
                BuiltinRequirementModifier = 76,
                IntrinsicTypeModifier = 77,
                MatrixLayoutModifier = 78,
                    RowMajorLayoutModifier = 79,
                        HLSLRowMajorLayoutModifier = 80,
                        GLSLColumnMajorLayoutModifier = 81,
                    ColumnMajorLayoutModifier = 82,
                        HLSLColumnMajorLayoutModifier = 83,
                        GLSLRowMajorLayoutModifier = 84,
                InterpolationModeModifier = 85,
                    HLSLNoInterpolationModifier = 86,
                    HLSLNoPerspectiveModifier = 87,
                    HLSLLinearModifier = 88,
                    HLSLSampleModifier = 89,
                    HLSLCentroidModifier = 90,
                    PerVertexModifier = 91,
                PreciseModifier = 92,
                HLSLEffectSharedModifier = 93,
                HLSLGroupSharedModifier = 94,
                HLSLStaticModifier = 95,
                HLSLUniformModifier = 96,
                HLSLVolatileModifier = 97,
                AttributeTargetModifier = 98,
                AttributeBase = 99,
                    UncheckedAttribute = 100,
                    Attribute = 101,
                        UserDefinedAttribute = 102,
                        AttributeUsageAttribute = 103,
                        NonDynamicUniformAttribute = 104,
                        RequireCapabilityAttribute = 105,
                        UnrollAttribute = 106,
                        ForceUnrollAttribute = 107,
                        MaxItersAttribute = 108,
                        InferredMaxItersAttribute = 109,
                        LoopAttribute = 110,
                        FastOptAttribute = 111,
                        AllowUAVConditionAttribute = 112,
                        BranchAttribute = 113,
                        FlattenAttribute = 114,
                        ForceCaseAttribute = 115,
                        CallAttribute = 116,
                        PushConstantAttribute = 117,
                        ShaderRecordAttribute = 118,
                        GLSLBindingAttribute = 119,
                        GLSLSimpleIntegerLayoutAttribute = 120,
                            GLSLLocationAttribute = 121,
                            GLSLIndexAttribute = 122,
                        SPIRVInstructionOpAttribute = 123,
                        SPIRVTargetEnv13Attribute = 124,
                        DisableArrayFlatteningAttribute = 125,
                        GLSLLayoutLocalSizeAttribute = 126,
                        MaxTessFactorAttribute = 127,
                        OutputControlPointsAttribute = 128,
                        OutputTopologyAttribute = 129,
                        PartitioningAttribute = 130,
                        PatchConstantFuncAttribute = 131,
                        DomainAttribute = 132,
                        EarlyDepthStencilAttribute = 133,
                        NumThreadsAttribute = 134,
                        MaxVertexCountAttribute = 135,
                        InstanceAttribute = 136,
                        EntryPointAttribute = 137,
                        VulkanRayPayloadAttribute = 138,
                        VulkanCallablePayloadAttribute = 139,
                        VulkanHitAttributesAttribute = 140,
                        VulkanHitObjectAttributesAttribute = 141,
                        MutatingAttribute = 142,
                        NonmutatingAttribute = 143,
                        ConstRefAttribute = 144,
                        ReadNoneAttribute = 145,
                        FormatAttribute = 146,
                        AllowAttribute = 147,
                        ExternAttribute = 148,
                        UnsafeForceInlineEarlyAttribute = 149,
                        ForceInlineAttribute = 150,
                        InheritanceControlAttribute = 151,
                            OpenAttribute = 152,
                            SealedAttribute = 153,
                        BuiltinAttribute = 154,
                        AnyValueSizeAttribute = 155,
                        OverloadRankAttribute = 156,
                        SpecializeAttribute = 157,
                        DifferentiableAttribute = 158,
                            TreatAsDifferentiableAttribute = 159,
                            ForwardDifferentiableAttribute = 160,
                            UserDefinedDerivativeAttribute = 161,
                                ForwardDerivativeAttribute = 162,
                                BackwardDerivativeAttribute = 163,
                            DerivativeOfAttribute = 164,
                                ForwardDerivativeOfAttribute = 165,
                                BackwardDerivativeOfAttribute = 166,
                            BackwardDifferentiableAttribute = 167,
                        DllImportAttribute = 168,
                        DllExportAttribute = 169,
                        TorchEntryPointAttribute = 170,
                        CudaDeviceExportAttribute = 171,
                        CudaKernelAttribute = 172,
                        CudaHostAttribute = 173,
                        AutoPyBindCudaAttribute = 174,
                        PyExportAttribute = 175,
                        PreferRecomputeAttribute = 176,
                        PreferCheckpointAttribute = 177,
                        DerivativeMemberAttribute = 178,
                        ComInterfaceAttribute = 179,
                        RequiresNVAPIAttribute = 180,
                        AlwaysFoldIntoUseSiteAttribute = 181,
                        PrimalSubstituteAttribute = 182,
                        PrimalSubstituteOfAttribute = 183,
                        NoDiffThisAttribute = 184,
                        NoInlineAttribute = 185,
                        PayloadAttribute = 186,
                        DeprecatedAttribute = 187,
                        NonCopyableTypeAttribute = 188,
                        NoSideEffectAttribute = 189,
                        KnownBuiltinAttribute = 190,
                HLSLGeometryShaderInputPrimitiveTypeModifier = 191,
                    HLSLPointModifier = 192,
                    HLSLLineModifier = 193,
                    HLSLTriangleModifier = 194,
                    HLSLLineAdjModifier = 195,
                    HLSLTriangleAdjModifier = 196,
                HLSLMeshShaderOutputModifier = 197,
                    HLSLVerticesModifier = 198,
                    HLSLIndicesModifier = 199,
                    HLSLPrimitivesModifier = 200,
                HLSLPayloadModifier = 201,
                ImplicitConversionModifier = 202,
                NVAPIMagicModifier = 203,
                NVAPISlotModifier = 204,
                TypeModifier = 205,
                    WrappingTypeModifier = 206,
                        GLSLBufferModifier = 207,
                    ResourceElementFormatModifier = 208,
                        UNormModifier = 209,
                        SNormModifier = 210,
                    NoDiffModifier = 211,
                BitFieldModifier = 212,
                DynamicUniformModifier = 213,
            ModifiableSyntaxNode = 214,
                DeclBase = 215,
                    Decl = 216,
                        UnresolvedDecl = 217,
                        ContainerDecl = 218,
                            AggTypeDeclBase = 219,
                                ExtensionDecl = 220,
                                AggTypeDecl = 221,
                                    StructDecl = 222,
                                    ClassDecl = 223,
                                    GLSLInterfaceBlockDecl = 224,
                                    EnumDecl = 225,
                                    ThisTypeDecl = 226,
                                    InterfaceDecl = 227,
                                    AssocTypeDecl = 228,
                                    GlobalGenericParamDecl = 229,
                            ScopeDecl = 230,
                            CallableDecl = 231,
                                FunctionDeclBase = 232,
                                    ConstructorDecl = 233,
                                    AccessorDecl = 234,
                                        GetterDecl = 235,
                                        SetterDecl = 236,
                                        RefAccessorDecl = 237,
                                    FuncDecl = 238,
                                    DerivativeRequirementDecl = 239,
                                        ForwardDerivativeRequirementDecl = 240,
                                        BackwardDerivativeRequirementDecl = 241,
                                    DerivativeRequirementReferenceDecl = 242,
                                SubscriptDecl = 243,
                            PropertyDecl = 244,
                            NamespaceDeclBase = 245,
                                NamespaceDecl = 246,
                                ModuleDecl = 247,
                            FileDecl = 248,
                            GenericDecl = 249,
                            AttributeDecl = 250,
                        VarDeclBase = 251,
                            VarDecl = 252,
                                LetDecl = 253,
                            GlobalGenericValueParamDecl = 254,
                            ParamDecl = 255,
                                ModernParamDecl = 256,
                            GenericValueParamDecl = 257,
                        EnumCaseDecl = 258,
                        TypeConstraintDecl = 259,
                            ThisTypeConstraintDecl = 260,
                            InheritanceDecl = 261,
                            GenericTypeConstraintDecl = 262,
                        SimpleTypeDecl = 263,
                            TypeDefDecl = 264,
                                TypeAliasDecl = 265,
                            GenericTypeParamDecl = 266,
                        UsingDecl = 267,
                        FileReferenceDeclBase = 268,
                            ImportDecl = 269,
                            IncludeDeclBase = 270,
                                IncludeDecl = 271,
                                ImplementingDecl = 272,
                        ModuleDeclarationDecl = 273,
                        RequireCapabilityDecl = 274,
                        EmptyDecl = 275,
                        SyntaxDecl = 276,
                    DeclGroup = 277,
                Stmt = 278,
                    ScopeStmt = 279,
                        BlockStmt = 280,
                        BreakableStmt = 281,
                            SwitchStmt = 282,
                            LoopStmt = 283,
                                ForStmt = 284,
                                    UnscopedForStmt = 285,
                                WhileStmt = 286,
                                DoWhileStmt = 287,
                        GpuForeachStmt = 288,
                        CompileTimeForStmt = 289,
                    SeqStmt = 290,
                    LabelStmt = 291,
                    UnparsedStmt = 292,
                    EmptyStmt = 293,
                    DiscardStmt = 294,
                    DeclStmt = 295,
                    IfStmt = 296,
                    TargetCaseStmt = 297,
                    TargetSwitchStmt = 298,
                    IntrinsicAsmStmt = 299,
                    ChildStmt = 300,
                        CaseStmtBase = 301,
                            CaseStmt = 302,
                            DefaultStmt = 303,
                        JumpStmt = 304,
                            BreakStmt = 305,
                            ContinueStmt = 306,
                    ReturnStmt = 307,
                    ExpressionStmt = 308,
            Expr = 309,
                IncompleteExpr = 310,
                DeclRefExpr = 311,
                    VarExpr = 312,
                    MemberExpr = 313,
                    StaticMemberExpr = 314,
                OverloadedExpr = 315,
                OverloadedExpr2 = 316,
                LiteralExpr = 317,
                    IntegerLiteralExpr = 318,
                    FloatingPointLiteralExpr = 319,
                    BoolLiteralExpr = 320,
                    NullPtrLiteralExpr = 321,
                    NoneLiteralExpr = 322,
                    StringLiteralExpr = 323,
                InitializerListExpr = 324,
                GetArrayLengthExpr = 325,
                ExprWithArgsBase = 326,
                    AggTypeCtorExpr = 327,
                    AppExprBase = 328,
                        InvokeExpr = 329,
                            NewExpr = 330,
                            OperatorExpr = 331,
                                InfixExpr = 332,
                                PrefixExpr = 333,
                                PostfixExpr = 334,
                                SelectExpr = 335,
                                LogicOperatorShortCircuitExpr = 336,
                            TypeCastExpr = 337,
                                ExplicitCastExpr = 338,
                                ImplicitCastExpr = 339,
                                LValueImplicitCastExpr = 340,
                                    OutImplicitCastExpr = 341,
                                    InOutImplicitCastExpr = 342,
                        GenericAppExpr = 343,
                TryExpr = 344,
                IndexExpr = 345,
                MatrixSwizzleExpr = 346,
                SwizzleExpr = 347,
                MakeRefExpr = 348,
                DerefExpr = 349,
                CastToSuperTypeExpr = 350,
                IsTypeExpr = 351,
                AsTypeExpr = 352,
                SizeOfLikeExpr = 353,
                    SizeOfExpr = 354,
                    AlignOfExpr = 355,
                MakeOptionalExpr = 356,
                ModifierCastExpr = 357,
                SharedTypeExpr = 358,
                AssignExpr = 359,
                ParenExpr = 360,
                ThisExpr = 361,
                ReturnValExpr = 362,
                LetExpr = 363,
                ExtractExistentialValueExpr = 364,
                OpenRefExpr = 365,
                HigherOrderInvokeExpr = 366,
                    PrimalSubstituteExpr = 367,
                    DifferentiateExpr = 368,
                        ForwardDifferentiateExpr = 369,
                        BackwardDifferentiateExpr = 370,
                    DispatchKernelExpr = 371,
                TreatAsDifferentiableExpr = 372,
                ThisTypeExpr = 373,
                AndTypeExpr = 374,
                ModifiedTypeExpr = 375,
                PointerTypeExpr = 376,
                FuncTypeExpr = 377,
                TupleTypeExpr = 378,
                PartiallyAppliedGenericExpr = 379,
                SPIRVAsmExpr = 380,
    Val = 381,
        Type = 382,
            OverloadGroupType = 383,
            InitializerListType = 384,
            ErrorType = 385,
            BottomType = 386,
            DeclRefType = 387,
                ArithmeticExpressionType = 388,
                    BasicExpressionType = 389,
                    DifferentialPairType = 390,
                    VectorExpressionType = 391,
                    MatrixExpressionType = 392,
                BuiltinType = 393,
                    FeedbackType = 394,
                    TextureShapeType = 395,
                        TextureShape1DType = 396,
                        TextureShape2DType = 397,
                        TextureShape3DType = 398,
                        TextureShapeCubeType = 399,
                        TextureShapeBufferType = 400,
                    ResourceType = 401,
                        TextureTypeBase = 402,
                            TextureType = 403,
                            GLSLImageType = 404,
                    SamplerStateType = 405,
                    BuiltinGenericType = 406,
                        PointerLikeType = 407,
                            ParameterGroupType = 408,
                                UniformParameterGroupType = 409,
                                    ConstantBufferType = 410,
                                    TextureBufferType = 411,
                                    ParameterBlockType = 412,
                                VaryingParameterGroupType = 413,
                                    GLSLInputParameterGroupType = 414,
                                    GLSLOutputParameterGroupType = 415,
                            GLSLShaderStorageBufferType = 416,
                        HLSLStructuredBufferTypeBase = 417,
                            HLSLStructuredBufferType = 418,
                            HLSLRWStructuredBufferType = 419,
                            HLSLRasterizerOrderedStructuredBufferType = 420,
                            HLSLAppendStructuredBufferType = 421,
                            HLSLConsumeStructuredBufferType = 422,
                        HLSLStreamOutputType = 423,
                            HLSLPointStreamType = 424,
                            HLSLLineStreamType = 425,
                            HLSLTriangleStreamType = 426,
                        MeshOutputType = 427,
                            VerticesType = 428,
                            IndicesType = 429,
                            PrimitivesType = 430,
                    UntypedBufferResourceType = 431,
                        HLSLByteAddressBufferType = 432,
                        HLSLRWByteAddressBufferType = 433,
                        HLSLRasterizerOrderedByteAddressBufferType = 434,
                        RaytracingAccelerationStructureType = 435,
                    HLSLPatchType = 436,
                        HLSLInputPatchType = 437,
                        HLSLOutputPatchType = 438,
                    GLSLInputAttachmentType = 439,
                    DifferentiableType = 440,
                    TensorViewType = 441,
                    StringTypeBase = 442,
                        StringType = 443,
                        NativeStringType = 444,
                    DynamicType = 445,
                    EnumTypeType = 446,
                    PtrTypeBase = 447,
                        PtrType = 448,
                        ConstBufferPointerType = 449,
                        ParamDirectionType = 450,
                            OutTypeBase = 451,
                                OutType = 452,
                                InOutType = 453,
                            RefTypeBase = 454,
                                RefType = 455,
                                ConstRefType = 456,
                    NoneType = 457,
                    NullPtrType = 458,
                    OptionalType = 459,
                    NativeRefType = 460,
                ArrayExpressionType = 461,
                ThisType = 462,
            TypeType = 463,
            NamedExpressionType = 464,
            FuncType = 465,
            TupleType = 466,
            GenericDeclRefType = 467,
            NamespaceType = 468,
            ExtractExistentialType = 469,
            ExistentialSpecializedType = 470,
            AndType = 471,
            ModifiedType = 472,
        DeclRefBase = 473,
            DirectDeclRef = 474,
            MemberDeclRef = 475,
            LookupDeclRef = 476,
            GenericAppDeclRef = 477,
        IntVal = 478,
            ConstantIntVal = 479,
            GenericParamIntVal = 480,
            TypeCastIntVal = 481,
            FuncCallIntVal = 482,
            WitnessLookupIntVal = 483,
            PolynomialIntVal = 484,
            ErrorIntVal = 485,
        PolynomialIntValFactor = 486,
        PolynomialIntValTerm = 487,
        Witness = 488,
            SubtypeWitness = 489,
                TypeEqualityWitness = 490,
                DeclaredSubtypeWitness = 491,
                TransitiveSubtypeWitness = 492,
                ExtractExistentialSubtypeWitness = 493,
                DynamicSubtypeWitness = 494,
                ConjunctionSubtypeWitness = 495,
                ExtractFromConjunctionSubtypeWitness = 496,
        ModifierVal = 497,
            TypeModifierVal = 498,
                ResourceFormatModifierVal = 499,
                    UNormModifierVal = 500,
                    SNormModifierVal = 501,
                NoDiffModifierVal = 502,
        DifferentiateVal = 503,
            ForwardDifferentiateVal = 504,
            BackwardDifferentiateVal = 505,
            BackwardDifferentiateIntermediateTypeVal = 506,
            BackwardDifferentiatePrimalVal = 507,
            BackwardDifferentiatePropagateVal = 508,
    CountOf
};

// Predeclare

class NodeBase;
struct Scope;
class SyntaxNodeBase;
class SyntaxNode;
class Modifier;
class InModifier;
class OutModifier;
class InOutModifier;
class ConstModifier;
class BuiltinModifier;
class InlineModifier;
class VisibilityModifier;
class PublicModifier;
class PrivateModifier;
class InternalModifier;
class RequireModifier;
class ParamModifier;
class ExternModifier;
class HLSLExportModifier;
class TransparentModifier;
class FromStdLibModifier;
class PrefixModifier;
class PostfixModifier;
class ExportedModifier;
class ConstExprModifier;
class GloballyCoherentModifier;
class ExternCppModifier;
class GLSLPrecisionModifier;
class GLSLModuleModifier;
class ToBeSynthesizedModifier;
class SynthesizedModifier;
class ExtensionExternVarModifier;
class ActualGlobalModifier;
class IgnoreForLookupModifier;
class IntrinsicOpModifier;
class TargetIntrinsicModifier;
class SpecializedForTargetModifier;
class RequiredGLSLExtensionModifier;
class RequiredGLSLVersionModifier;
class RequiredSPIRVVersionModifier;
class RequiredCUDASMVersionModifier;
class RefModifier;
class ConstRefModifier;
class SharedModifiers;
class GLSLLayoutModifier;
class GLSLParsedLayoutModifier;
class GLSLConstantIDLayoutModifier;
class GLSLLocationLayoutModifier;
class GLSLBufferDataLayoutModifier;
class GLSLStd140Modifier;
class GLSLStd430Modifier;
class GLSLScalarModifier;
class GLSLUnparsedLayoutModifier;
class GLSLLayoutModifierGroupMarker;
class GLSLLayoutModifierGroupBegin;
class GLSLLayoutModifierGroupEnd;
class SimpleModifier;
class GLSLWriteOnlyModifier;
class GLSLReadOnlyModifier;
class GLSLPatchModifier;
class ImplicitParameterGroupVariableModifier;
class ImplicitParameterGroupElementTypeModifier;
class HLSLSemantic;
class HLSLLayoutSemantic;
class HLSLRegisterSemantic;
class HLSLPackOffsetSemantic;
class HLSLSimpleSemantic;
class RayPayloadAccessSemantic;
class RayPayloadReadSemantic;
class RayPayloadWriteSemantic;
class GLSLPreprocessorDirective;
class GLSLVersionDirective;
class GLSLExtensionDirective;
class ParameterGroupReflectionName;
class BuiltinTypeModifier;
class MagicTypeModifier;
class BuiltinRequirementModifier;
class IntrinsicTypeModifier;
class MatrixLayoutModifier;
class RowMajorLayoutModifier;
class HLSLRowMajorLayoutModifier;
class GLSLColumnMajorLayoutModifier;
class ColumnMajorLayoutModifier;
class HLSLColumnMajorLayoutModifier;
class GLSLRowMajorLayoutModifier;
class InterpolationModeModifier;
class HLSLNoInterpolationModifier;
class HLSLNoPerspectiveModifier;
class HLSLLinearModifier;
class HLSLSampleModifier;
class HLSLCentroidModifier;
class PerVertexModifier;
class PreciseModifier;
class HLSLEffectSharedModifier;
class HLSLGroupSharedModifier;
class HLSLStaticModifier;
class HLSLUniformModifier;
class HLSLVolatileModifier;
class AttributeTargetModifier;
class AttributeBase;
class UncheckedAttribute;
class Attribute;
class UserDefinedAttribute;
class AttributeUsageAttribute;
class NonDynamicUniformAttribute;
class RequireCapabilityAttribute;
class UnrollAttribute;
class ForceUnrollAttribute;
class MaxItersAttribute;
class InferredMaxItersAttribute;
class LoopAttribute;
class FastOptAttribute;
class AllowUAVConditionAttribute;
class BranchAttribute;
class FlattenAttribute;
class ForceCaseAttribute;
class CallAttribute;
class PushConstantAttribute;
class ShaderRecordAttribute;
class GLSLBindingAttribute;
class GLSLSimpleIntegerLayoutAttribute;
class GLSLLocationAttribute;
class GLSLIndexAttribute;
class SPIRVInstructionOpAttribute;
class SPIRVTargetEnv13Attribute;
class DisableArrayFlatteningAttribute;
class GLSLLayoutLocalSizeAttribute;
class MaxTessFactorAttribute;
class OutputControlPointsAttribute;
class OutputTopologyAttribute;
class PartitioningAttribute;
class PatchConstantFuncAttribute;
class DomainAttribute;
class EarlyDepthStencilAttribute;
class NumThreadsAttribute;
class MaxVertexCountAttribute;
class InstanceAttribute;
class EntryPointAttribute;
class VulkanRayPayloadAttribute;
class VulkanCallablePayloadAttribute;
class VulkanHitAttributesAttribute;
class VulkanHitObjectAttributesAttribute;
class MutatingAttribute;
class NonmutatingAttribute;
class ConstRefAttribute;
class ReadNoneAttribute;
class FormatAttribute;
class AllowAttribute;
class ExternAttribute;
class UnsafeForceInlineEarlyAttribute;
class ForceInlineAttribute;
class InheritanceControlAttribute;
class OpenAttribute;
class SealedAttribute;
class BuiltinAttribute;
class AnyValueSizeAttribute;
class OverloadRankAttribute;
class SpecializeAttribute;
class DifferentiableAttribute;
class TreatAsDifferentiableAttribute;
class ForwardDifferentiableAttribute;
class UserDefinedDerivativeAttribute;
class ForwardDerivativeAttribute;
class BackwardDerivativeAttribute;
class DerivativeOfAttribute;
class ForwardDerivativeOfAttribute;
class BackwardDerivativeOfAttribute;
class BackwardDifferentiableAttribute;
class DllImportAttribute;
class DllExportAttribute;
class TorchEntryPointAttribute;
class CudaDeviceExportAttribute;
class CudaKernelAttribute;
class CudaHostAttribute;
class AutoPyBindCudaAttribute;
class PyExportAttribute;
class PreferRecomputeAttribute;
class PreferCheckpointAttribute;
class DerivativeMemberAttribute;
class ComInterfaceAttribute;
class RequiresNVAPIAttribute;
class AlwaysFoldIntoUseSiteAttribute;
class PrimalSubstituteAttribute;
class PrimalSubstituteOfAttribute;
class NoDiffThisAttribute;
class NoInlineAttribute;
class PayloadAttribute;
class DeprecatedAttribute;
class NonCopyableTypeAttribute;
class NoSideEffectAttribute;
class KnownBuiltinAttribute;
class HLSLGeometryShaderInputPrimitiveTypeModifier;
class HLSLPointModifier;
class HLSLLineModifier;
class HLSLTriangleModifier;
class HLSLLineAdjModifier;
class HLSLTriangleAdjModifier;
class HLSLMeshShaderOutputModifier;
class HLSLVerticesModifier;
class HLSLIndicesModifier;
class HLSLPrimitivesModifier;
class HLSLPayloadModifier;
class ImplicitConversionModifier;
class NVAPIMagicModifier;
class NVAPISlotModifier;
class TypeModifier;
class WrappingTypeModifier;
class GLSLBufferModifier;
class ResourceElementFormatModifier;
class UNormModifier;
class SNormModifier;
class NoDiffModifier;
class BitFieldModifier;
class DynamicUniformModifier;
class ModifiableSyntaxNode;
class DeclBase;
class Decl;
class UnresolvedDecl;
class ContainerDecl;
class AggTypeDeclBase;
class ExtensionDecl;
class AggTypeDecl;
class StructDecl;
class ClassDecl;
class GLSLInterfaceBlockDecl;
class EnumDecl;
class ThisTypeDecl;
class InterfaceDecl;
class AssocTypeDecl;
class GlobalGenericParamDecl;
class ScopeDecl;
class CallableDecl;
class FunctionDeclBase;
class ConstructorDecl;
class AccessorDecl;
class GetterDecl;
class SetterDecl;
class RefAccessorDecl;
class FuncDecl;
class DerivativeRequirementDecl;
class ForwardDerivativeRequirementDecl;
class BackwardDerivativeRequirementDecl;
class DerivativeRequirementReferenceDecl;
class SubscriptDecl;
class PropertyDecl;
class NamespaceDeclBase;
class NamespaceDecl;
class ModuleDecl;
class FileDecl;
class GenericDecl;
class AttributeDecl;
class VarDeclBase;
class VarDecl;
class LetDecl;
class GlobalGenericValueParamDecl;
class ParamDecl;
class ModernParamDecl;
class GenericValueParamDecl;
class EnumCaseDecl;
class TypeConstraintDecl;
class ThisTypeConstraintDecl;
class InheritanceDecl;
class GenericTypeConstraintDecl;
class SimpleTypeDecl;
class TypeDefDecl;
class TypeAliasDecl;
class GenericTypeParamDecl;
class UsingDecl;
class FileReferenceDeclBase;
class ImportDecl;
class IncludeDeclBase;
class IncludeDecl;
class ImplementingDecl;
class ModuleDeclarationDecl;
class RequireCapabilityDecl;
class EmptyDecl;
class SyntaxDecl;
class DeclGroup;
class Stmt;
class ScopeStmt;
class BlockStmt;
class BreakableStmt;
class SwitchStmt;
class LoopStmt;
class ForStmt;
class UnscopedForStmt;
class WhileStmt;
class DoWhileStmt;
class GpuForeachStmt;
class CompileTimeForStmt;
class SeqStmt;
class LabelStmt;
class UnparsedStmt;
class EmptyStmt;
class DiscardStmt;
class DeclStmt;
class IfStmt;
class TargetCaseStmt;
class TargetSwitchStmt;
class IntrinsicAsmStmt;
class ChildStmt;
class CaseStmtBase;
class CaseStmt;
class DefaultStmt;
class JumpStmt;
class BreakStmt;
class ContinueStmt;
class ReturnStmt;
class ExpressionStmt;
class Expr;
class IncompleteExpr;
class DeclRefExpr;
class VarExpr;
class MemberExpr;
class StaticMemberExpr;
class OverloadedExpr;
class OverloadedExpr2;
class LiteralExpr;
class IntegerLiteralExpr;
class FloatingPointLiteralExpr;
class BoolLiteralExpr;
class NullPtrLiteralExpr;
class NoneLiteralExpr;
class StringLiteralExpr;
class InitializerListExpr;
class GetArrayLengthExpr;
class ExprWithArgsBase;
class AggTypeCtorExpr;
class AppExprBase;
class InvokeExpr;
class NewExpr;
class OperatorExpr;
class InfixExpr;
class PrefixExpr;
class PostfixExpr;
class SelectExpr;
class LogicOperatorShortCircuitExpr;
class TypeCastExpr;
class ExplicitCastExpr;
class ImplicitCastExpr;
class LValueImplicitCastExpr;
class OutImplicitCastExpr;
class InOutImplicitCastExpr;
class GenericAppExpr;
class TryExpr;
class IndexExpr;
class MatrixSwizzleExpr;
class SwizzleExpr;
class MakeRefExpr;
class DerefExpr;
class CastToSuperTypeExpr;
class IsTypeExpr;
class AsTypeExpr;
class SizeOfLikeExpr;
class SizeOfExpr;
class AlignOfExpr;
class MakeOptionalExpr;
class ModifierCastExpr;
class SharedTypeExpr;
class AssignExpr;
class ParenExpr;
class ThisExpr;
class ReturnValExpr;
class LetExpr;
class ExtractExistentialValueExpr;
class OpenRefExpr;
class HigherOrderInvokeExpr;
class PrimalSubstituteExpr;
class DifferentiateExpr;
class ForwardDifferentiateExpr;
class BackwardDifferentiateExpr;
class DispatchKernelExpr;
class TreatAsDifferentiableExpr;
class ThisTypeExpr;
class AndTypeExpr;
class ModifiedTypeExpr;
class PointerTypeExpr;
class FuncTypeExpr;
class TupleTypeExpr;
class PartiallyAppliedGenericExpr;
class SPIRVAsmExpr;
class Val;
class Type;
class OverloadGroupType;
class InitializerListType;
class ErrorType;
class BottomType;
class DeclRefType;
class ArithmeticExpressionType;
class BasicExpressionType;
class DifferentialPairType;
class VectorExpressionType;
class MatrixExpressionType;
class BuiltinType;
class FeedbackType;
class TextureShapeType;
class TextureShape1DType;
class TextureShape2DType;
class TextureShape3DType;
class TextureShapeCubeType;
class TextureShapeBufferType;
class ResourceType;
class TextureTypeBase;
class TextureType;
class GLSLImageType;
class SamplerStateType;
class BuiltinGenericType;
class PointerLikeType;
class ParameterGroupType;
class UniformParameterGroupType;
class ConstantBufferType;
class TextureBufferType;
class ParameterBlockType;
class VaryingParameterGroupType;
class GLSLInputParameterGroupType;
class GLSLOutputParameterGroupType;
class GLSLShaderStorageBufferType;
class HLSLStructuredBufferTypeBase;
class HLSLStructuredBufferType;
class HLSLRWStructuredBufferType;
class HLSLRasterizerOrderedStructuredBufferType;
class HLSLAppendStructuredBufferType;
class HLSLConsumeStructuredBufferType;
class HLSLStreamOutputType;
class HLSLPointStreamType;
class HLSLLineStreamType;
class HLSLTriangleStreamType;
class MeshOutputType;
class VerticesType;
class IndicesType;
class PrimitivesType;
class UntypedBufferResourceType;
class HLSLByteAddressBufferType;
class HLSLRWByteAddressBufferType;
class HLSLRasterizerOrderedByteAddressBufferType;
class RaytracingAccelerationStructureType;
class HLSLPatchType;
class HLSLInputPatchType;
class HLSLOutputPatchType;
class GLSLInputAttachmentType;
class DifferentiableType;
class TensorViewType;
class StringTypeBase;
class StringType;
class NativeStringType;
class DynamicType;
class EnumTypeType;
class PtrTypeBase;
class PtrType;
class ConstBufferPointerType;
class ParamDirectionType;
class OutTypeBase;
class OutType;
class InOutType;
class RefTypeBase;
class RefType;
class ConstRefType;
class NoneType;
class NullPtrType;
class OptionalType;
class NativeRefType;
class ArrayExpressionType;
class ThisType;
class TypeType;
class NamedExpressionType;
class FuncType;
class TupleType;
class GenericDeclRefType;
class NamespaceType;
class ExtractExistentialType;
class ExistentialSpecializedType;
class AndType;
class ModifiedType;
class DeclRefBase;
class DirectDeclRef;
class MemberDeclRef;
class LookupDeclRef;
class GenericAppDeclRef;
class IntVal;
class ConstantIntVal;
class GenericParamIntVal;
class TypeCastIntVal;
class FuncCallIntVal;
class WitnessLookupIntVal;
class PolynomialIntVal;
class ErrorIntVal;
class PolynomialIntValFactor;
class PolynomialIntValTerm;
class Witness;
class SubtypeWitness;
class TypeEqualityWitness;
class DeclaredSubtypeWitness;
class TransitiveSubtypeWitness;
class ExtractExistentialSubtypeWitness;
class DynamicSubtypeWitness;
class ConjunctionSubtypeWitness;
class ExtractFromConjunctionSubtypeWitness;
class ModifierVal;
class TypeModifierVal;
class ResourceFormatModifierVal;
class UNormModifierVal;
class SNormModifierVal;
class NoDiffModifierVal;
class DifferentiateVal;
class ForwardDifferentiateVal;
class BackwardDifferentiateVal;
class BackwardDifferentiateIntermediateTypeVal;
class BackwardDifferentiatePrimalVal;
class BackwardDifferentiatePropagateVal;
// Type macros

// Order is (NAME, SUPER, ORIGIN, LAST, MARKER, TYPE, param) 
// NAME - is the class name
// SUPER - is the super class name (or NO_SUPER)
// ORIGIN - where the definition was found
// LAST - is the class name for the last in the range (or NO_LAST)
// MARKER - is the text inbetween in the prefix/postix (like ABSTRACT). If no inbetween text is is 'NONE'
// TYPE - Can be BASE, INNER or LEAF for the overall base class, an INNER class, or a LEAF class
// param is a user defined parameter that can be parsed to the invoked x macro

#define SLANG_ASTNode_NodeBase(x, param)     x(NodeBase, NO_SUPER, AST_BASE, BackwardDifferentiatePropagateVal, ABSTRACT_AST, BASE, param)
#define SLANG_ASTNode_Scope(x, param)     x(Scope, NodeBase, AST_BASE, Scope, AST, LEAF, param)
#define SLANG_ASTNode_SyntaxNodeBase(x, param)     x(SyntaxNodeBase, NodeBase, AST_BASE, SPIRVAsmExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_SyntaxNode(x, param)     x(SyntaxNode, SyntaxNodeBase, AST_BASE, SPIRVAsmExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_Modifier(x, param)     x(Modifier, SyntaxNode, AST_BASE, DynamicUniformModifier, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_InModifier(x, param)     x(InModifier, Modifier, AST_MODIFIER, InModifier, AST, LEAF, param)
#define SLANG_ASTNode_OutModifier(x, param)     x(OutModifier, Modifier, AST_MODIFIER, InOutModifier, AST, INNER, param)
#define SLANG_ASTNode_InOutModifier(x, param)     x(InOutModifier, OutModifier, AST_MODIFIER, InOutModifier, AST, LEAF, param)
#define SLANG_ASTNode_ConstModifier(x, param)     x(ConstModifier, Modifier, AST_MODIFIER, ConstModifier, AST, LEAF, param)
#define SLANG_ASTNode_BuiltinModifier(x, param)     x(BuiltinModifier, Modifier, AST_MODIFIER, BuiltinModifier, AST, LEAF, param)
#define SLANG_ASTNode_InlineModifier(x, param)     x(InlineModifier, Modifier, AST_MODIFIER, InlineModifier, AST, LEAF, param)
#define SLANG_ASTNode_VisibilityModifier(x, param)     x(VisibilityModifier, Modifier, AST_MODIFIER, InternalModifier, AST, INNER, param)
#define SLANG_ASTNode_PublicModifier(x, param)     x(PublicModifier, VisibilityModifier, AST_MODIFIER, PublicModifier, AST, LEAF, param)
#define SLANG_ASTNode_PrivateModifier(x, param)     x(PrivateModifier, VisibilityModifier, AST_MODIFIER, PrivateModifier, AST, LEAF, param)
#define SLANG_ASTNode_InternalModifier(x, param)     x(InternalModifier, VisibilityModifier, AST_MODIFIER, InternalModifier, AST, LEAF, param)
#define SLANG_ASTNode_RequireModifier(x, param)     x(RequireModifier, Modifier, AST_MODIFIER, RequireModifier, AST, LEAF, param)
#define SLANG_ASTNode_ParamModifier(x, param)     x(ParamModifier, Modifier, AST_MODIFIER, ParamModifier, AST, LEAF, param)
#define SLANG_ASTNode_ExternModifier(x, param)     x(ExternModifier, Modifier, AST_MODIFIER, ExternModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLExportModifier(x, param)     x(HLSLExportModifier, Modifier, AST_MODIFIER, HLSLExportModifier, AST, LEAF, param)
#define SLANG_ASTNode_TransparentModifier(x, param)     x(TransparentModifier, Modifier, AST_MODIFIER, TransparentModifier, AST, LEAF, param)
#define SLANG_ASTNode_FromStdLibModifier(x, param)     x(FromStdLibModifier, Modifier, AST_MODIFIER, FromStdLibModifier, AST, LEAF, param)
#define SLANG_ASTNode_PrefixModifier(x, param)     x(PrefixModifier, Modifier, AST_MODIFIER, PrefixModifier, AST, LEAF, param)
#define SLANG_ASTNode_PostfixModifier(x, param)     x(PostfixModifier, Modifier, AST_MODIFIER, PostfixModifier, AST, LEAF, param)
#define SLANG_ASTNode_ExportedModifier(x, param)     x(ExportedModifier, Modifier, AST_MODIFIER, ExportedModifier, AST, LEAF, param)
#define SLANG_ASTNode_ConstExprModifier(x, param)     x(ConstExprModifier, Modifier, AST_MODIFIER, ConstExprModifier, AST, LEAF, param)
#define SLANG_ASTNode_GloballyCoherentModifier(x, param)     x(GloballyCoherentModifier, Modifier, AST_MODIFIER, GloballyCoherentModifier, AST, LEAF, param)
#define SLANG_ASTNode_ExternCppModifier(x, param)     x(ExternCppModifier, Modifier, AST_MODIFIER, ExternCppModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLPrecisionModifier(x, param)     x(GLSLPrecisionModifier, Modifier, AST_MODIFIER, GLSLPrecisionModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLModuleModifier(x, param)     x(GLSLModuleModifier, Modifier, AST_MODIFIER, GLSLModuleModifier, AST, LEAF, param)
#define SLANG_ASTNode_ToBeSynthesizedModifier(x, param)     x(ToBeSynthesizedModifier, Modifier, AST_MODIFIER, ToBeSynthesizedModifier, AST, LEAF, param)
#define SLANG_ASTNode_SynthesizedModifier(x, param)     x(SynthesizedModifier, Modifier, AST_MODIFIER, SynthesizedModifier, AST, LEAF, param)
#define SLANG_ASTNode_ExtensionExternVarModifier(x, param)     x(ExtensionExternVarModifier, Modifier, AST_MODIFIER, ExtensionExternVarModifier, AST, LEAF, param)
#define SLANG_ASTNode_ActualGlobalModifier(x, param)     x(ActualGlobalModifier, Modifier, AST_MODIFIER, ActualGlobalModifier, AST, LEAF, param)
#define SLANG_ASTNode_IgnoreForLookupModifier(x, param)     x(IgnoreForLookupModifier, Modifier, AST_MODIFIER, IgnoreForLookupModifier, AST, LEAF, param)
#define SLANG_ASTNode_IntrinsicOpModifier(x, param)     x(IntrinsicOpModifier, Modifier, AST_MODIFIER, IntrinsicOpModifier, AST, LEAF, param)
#define SLANG_ASTNode_TargetIntrinsicModifier(x, param)     x(TargetIntrinsicModifier, Modifier, AST_MODIFIER, TargetIntrinsicModifier, AST, LEAF, param)
#define SLANG_ASTNode_SpecializedForTargetModifier(x, param)     x(SpecializedForTargetModifier, Modifier, AST_MODIFIER, SpecializedForTargetModifier, AST, LEAF, param)
#define SLANG_ASTNode_RequiredGLSLExtensionModifier(x, param)     x(RequiredGLSLExtensionModifier, Modifier, AST_MODIFIER, RequiredGLSLExtensionModifier, AST, LEAF, param)
#define SLANG_ASTNode_RequiredGLSLVersionModifier(x, param)     x(RequiredGLSLVersionModifier, Modifier, AST_MODIFIER, RequiredGLSLVersionModifier, AST, LEAF, param)
#define SLANG_ASTNode_RequiredSPIRVVersionModifier(x, param)     x(RequiredSPIRVVersionModifier, Modifier, AST_MODIFIER, RequiredSPIRVVersionModifier, AST, LEAF, param)
#define SLANG_ASTNode_RequiredCUDASMVersionModifier(x, param)     x(RequiredCUDASMVersionModifier, Modifier, AST_MODIFIER, RequiredCUDASMVersionModifier, AST, LEAF, param)
#define SLANG_ASTNode_RefModifier(x, param)     x(RefModifier, Modifier, AST_MODIFIER, RefModifier, AST, LEAF, param)
#define SLANG_ASTNode_ConstRefModifier(x, param)     x(ConstRefModifier, Modifier, AST_MODIFIER, ConstRefModifier, AST, LEAF, param)
#define SLANG_ASTNode_SharedModifiers(x, param)     x(SharedModifiers, Modifier, AST_MODIFIER, SharedModifiers, AST, LEAF, param)
#define SLANG_ASTNode_GLSLLayoutModifier(x, param)     x(GLSLLayoutModifier, Modifier, AST_MODIFIER, GLSLUnparsedLayoutModifier, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_GLSLParsedLayoutModifier(x, param)     x(GLSLParsedLayoutModifier, GLSLLayoutModifier, AST_MODIFIER, GLSLScalarModifier, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_GLSLConstantIDLayoutModifier(x, param)     x(GLSLConstantIDLayoutModifier, GLSLParsedLayoutModifier, AST_MODIFIER, GLSLConstantIDLayoutModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLLocationLayoutModifier(x, param)     x(GLSLLocationLayoutModifier, GLSLParsedLayoutModifier, AST_MODIFIER, GLSLLocationLayoutModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLBufferDataLayoutModifier(x, param)     x(GLSLBufferDataLayoutModifier, GLSLParsedLayoutModifier, AST_MODIFIER, GLSLScalarModifier, AST, INNER, param)
#define SLANG_ASTNode_GLSLStd140Modifier(x, param)     x(GLSLStd140Modifier, GLSLBufferDataLayoutModifier, AST_MODIFIER, GLSLStd140Modifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLStd430Modifier(x, param)     x(GLSLStd430Modifier, GLSLBufferDataLayoutModifier, AST_MODIFIER, GLSLStd430Modifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLScalarModifier(x, param)     x(GLSLScalarModifier, GLSLBufferDataLayoutModifier, AST_MODIFIER, GLSLScalarModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLUnparsedLayoutModifier(x, param)     x(GLSLUnparsedLayoutModifier, GLSLLayoutModifier, AST_MODIFIER, GLSLUnparsedLayoutModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLLayoutModifierGroupMarker(x, param)     x(GLSLLayoutModifierGroupMarker, Modifier, AST_MODIFIER, GLSLLayoutModifierGroupEnd, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_GLSLLayoutModifierGroupBegin(x, param)     x(GLSLLayoutModifierGroupBegin, GLSLLayoutModifierGroupMarker, AST_MODIFIER, GLSLLayoutModifierGroupBegin, AST, LEAF, param)
#define SLANG_ASTNode_GLSLLayoutModifierGroupEnd(x, param)     x(GLSLLayoutModifierGroupEnd, GLSLLayoutModifierGroupMarker, AST_MODIFIER, GLSLLayoutModifierGroupEnd, AST, LEAF, param)
#define SLANG_ASTNode_SimpleModifier(x, param)     x(SimpleModifier, Modifier, AST_MODIFIER, GLSLPatchModifier, AST, INNER, param)
#define SLANG_ASTNode_GLSLWriteOnlyModifier(x, param)     x(GLSLWriteOnlyModifier, SimpleModifier, AST_MODIFIER, GLSLWriteOnlyModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLReadOnlyModifier(x, param)     x(GLSLReadOnlyModifier, SimpleModifier, AST_MODIFIER, GLSLReadOnlyModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLPatchModifier(x, param)     x(GLSLPatchModifier, SimpleModifier, AST_MODIFIER, GLSLPatchModifier, AST, LEAF, param)
#define SLANG_ASTNode_ImplicitParameterGroupVariableModifier(x, param)     x(ImplicitParameterGroupVariableModifier, Modifier, AST_MODIFIER, ImplicitParameterGroupVariableModifier, AST, LEAF, param)
#define SLANG_ASTNode_ImplicitParameterGroupElementTypeModifier(x, param)     x(ImplicitParameterGroupElementTypeModifier, Modifier, AST_MODIFIER, ImplicitParameterGroupElementTypeModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLSemantic(x, param)     x(HLSLSemantic, Modifier, AST_MODIFIER, RayPayloadWriteSemantic, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_HLSLLayoutSemantic(x, param)     x(HLSLLayoutSemantic, HLSLSemantic, AST_MODIFIER, HLSLPackOffsetSemantic, AST, INNER, param)
#define SLANG_ASTNode_HLSLRegisterSemantic(x, param)     x(HLSLRegisterSemantic, HLSLLayoutSemantic, AST_MODIFIER, HLSLRegisterSemantic, AST, LEAF, param)
#define SLANG_ASTNode_HLSLPackOffsetSemantic(x, param)     x(HLSLPackOffsetSemantic, HLSLLayoutSemantic, AST_MODIFIER, HLSLPackOffsetSemantic, AST, LEAF, param)
#define SLANG_ASTNode_HLSLSimpleSemantic(x, param)     x(HLSLSimpleSemantic, HLSLSemantic, AST_MODIFIER, HLSLSimpleSemantic, AST, LEAF, param)
#define SLANG_ASTNode_RayPayloadAccessSemantic(x, param)     x(RayPayloadAccessSemantic, HLSLSemantic, AST_MODIFIER, RayPayloadWriteSemantic, AST, INNER, param)
#define SLANG_ASTNode_RayPayloadReadSemantic(x, param)     x(RayPayloadReadSemantic, RayPayloadAccessSemantic, AST_MODIFIER, RayPayloadReadSemantic, AST, LEAF, param)
#define SLANG_ASTNode_RayPayloadWriteSemantic(x, param)     x(RayPayloadWriteSemantic, RayPayloadAccessSemantic, AST_MODIFIER, RayPayloadWriteSemantic, AST, LEAF, param)
#define SLANG_ASTNode_GLSLPreprocessorDirective(x, param)     x(GLSLPreprocessorDirective, Modifier, AST_MODIFIER, GLSLExtensionDirective, AST, INNER, param)
#define SLANG_ASTNode_GLSLVersionDirective(x, param)     x(GLSLVersionDirective, GLSLPreprocessorDirective, AST_MODIFIER, GLSLVersionDirective, AST, LEAF, param)
#define SLANG_ASTNode_GLSLExtensionDirective(x, param)     x(GLSLExtensionDirective, GLSLPreprocessorDirective, AST_MODIFIER, GLSLExtensionDirective, AST, LEAF, param)
#define SLANG_ASTNode_ParameterGroupReflectionName(x, param)     x(ParameterGroupReflectionName, Modifier, AST_MODIFIER, ParameterGroupReflectionName, AST, LEAF, param)
#define SLANG_ASTNode_BuiltinTypeModifier(x, param)     x(BuiltinTypeModifier, Modifier, AST_MODIFIER, BuiltinTypeModifier, AST, LEAF, param)
#define SLANG_ASTNode_MagicTypeModifier(x, param)     x(MagicTypeModifier, Modifier, AST_MODIFIER, MagicTypeModifier, AST, LEAF, param)
#define SLANG_ASTNode_BuiltinRequirementModifier(x, param)     x(BuiltinRequirementModifier, Modifier, AST_MODIFIER, BuiltinRequirementModifier, AST, LEAF, param)
#define SLANG_ASTNode_IntrinsicTypeModifier(x, param)     x(IntrinsicTypeModifier, Modifier, AST_MODIFIER, IntrinsicTypeModifier, AST, LEAF, param)
#define SLANG_ASTNode_MatrixLayoutModifier(x, param)     x(MatrixLayoutModifier, Modifier, AST_MODIFIER, GLSLRowMajorLayoutModifier, AST, INNER, param)
#define SLANG_ASTNode_RowMajorLayoutModifier(x, param)     x(RowMajorLayoutModifier, MatrixLayoutModifier, AST_MODIFIER, GLSLColumnMajorLayoutModifier, AST, INNER, param)
#define SLANG_ASTNode_HLSLRowMajorLayoutModifier(x, param)     x(HLSLRowMajorLayoutModifier, RowMajorLayoutModifier, AST_MODIFIER, HLSLRowMajorLayoutModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLColumnMajorLayoutModifier(x, param)     x(GLSLColumnMajorLayoutModifier, RowMajorLayoutModifier, AST_MODIFIER, GLSLColumnMajorLayoutModifier, AST, LEAF, param)
#define SLANG_ASTNode_ColumnMajorLayoutModifier(x, param)     x(ColumnMajorLayoutModifier, MatrixLayoutModifier, AST_MODIFIER, GLSLRowMajorLayoutModifier, AST, INNER, param)
#define SLANG_ASTNode_HLSLColumnMajorLayoutModifier(x, param)     x(HLSLColumnMajorLayoutModifier, ColumnMajorLayoutModifier, AST_MODIFIER, HLSLColumnMajorLayoutModifier, AST, LEAF, param)
#define SLANG_ASTNode_GLSLRowMajorLayoutModifier(x, param)     x(GLSLRowMajorLayoutModifier, ColumnMajorLayoutModifier, AST_MODIFIER, GLSLRowMajorLayoutModifier, AST, LEAF, param)
#define SLANG_ASTNode_InterpolationModeModifier(x, param)     x(InterpolationModeModifier, Modifier, AST_MODIFIER, PerVertexModifier, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_HLSLNoInterpolationModifier(x, param)     x(HLSLNoInterpolationModifier, InterpolationModeModifier, AST_MODIFIER, HLSLNoInterpolationModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLNoPerspectiveModifier(x, param)     x(HLSLNoPerspectiveModifier, InterpolationModeModifier, AST_MODIFIER, HLSLNoPerspectiveModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLLinearModifier(x, param)     x(HLSLLinearModifier, InterpolationModeModifier, AST_MODIFIER, HLSLLinearModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLSampleModifier(x, param)     x(HLSLSampleModifier, InterpolationModeModifier, AST_MODIFIER, HLSLSampleModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLCentroidModifier(x, param)     x(HLSLCentroidModifier, InterpolationModeModifier, AST_MODIFIER, HLSLCentroidModifier, AST, LEAF, param)
#define SLANG_ASTNode_PerVertexModifier(x, param)     x(PerVertexModifier, InterpolationModeModifier, AST_MODIFIER, PerVertexModifier, AST, LEAF, param)
#define SLANG_ASTNode_PreciseModifier(x, param)     x(PreciseModifier, Modifier, AST_MODIFIER, PreciseModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLEffectSharedModifier(x, param)     x(HLSLEffectSharedModifier, Modifier, AST_MODIFIER, HLSLEffectSharedModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLGroupSharedModifier(x, param)     x(HLSLGroupSharedModifier, Modifier, AST_MODIFIER, HLSLGroupSharedModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLStaticModifier(x, param)     x(HLSLStaticModifier, Modifier, AST_MODIFIER, HLSLStaticModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLUniformModifier(x, param)     x(HLSLUniformModifier, Modifier, AST_MODIFIER, HLSLUniformModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLVolatileModifier(x, param)     x(HLSLVolatileModifier, Modifier, AST_MODIFIER, HLSLVolatileModifier, AST, LEAF, param)
#define SLANG_ASTNode_AttributeTargetModifier(x, param)     x(AttributeTargetModifier, Modifier, AST_MODIFIER, AttributeTargetModifier, AST, LEAF, param)
#define SLANG_ASTNode_AttributeBase(x, param)     x(AttributeBase, Modifier, AST_MODIFIER, KnownBuiltinAttribute, AST, INNER, param)
#define SLANG_ASTNode_UncheckedAttribute(x, param)     x(UncheckedAttribute, AttributeBase, AST_MODIFIER, UncheckedAttribute, AST, LEAF, param)
#define SLANG_ASTNode_Attribute(x, param)     x(Attribute, AttributeBase, AST_MODIFIER, KnownBuiltinAttribute, AST, INNER, param)
#define SLANG_ASTNode_UserDefinedAttribute(x, param)     x(UserDefinedAttribute, Attribute, AST_MODIFIER, UserDefinedAttribute, AST, LEAF, param)
#define SLANG_ASTNode_AttributeUsageAttribute(x, param)     x(AttributeUsageAttribute, Attribute, AST_MODIFIER, AttributeUsageAttribute, AST, LEAF, param)
#define SLANG_ASTNode_NonDynamicUniformAttribute(x, param)     x(NonDynamicUniformAttribute, Attribute, AST_MODIFIER, NonDynamicUniformAttribute, AST, LEAF, param)
#define SLANG_ASTNode_RequireCapabilityAttribute(x, param)     x(RequireCapabilityAttribute, Attribute, AST_MODIFIER, RequireCapabilityAttribute, AST, LEAF, param)
#define SLANG_ASTNode_UnrollAttribute(x, param)     x(UnrollAttribute, Attribute, AST_MODIFIER, UnrollAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ForceUnrollAttribute(x, param)     x(ForceUnrollAttribute, Attribute, AST_MODIFIER, ForceUnrollAttribute, AST, LEAF, param)
#define SLANG_ASTNode_MaxItersAttribute(x, param)     x(MaxItersAttribute, Attribute, AST_MODIFIER, MaxItersAttribute, AST, LEAF, param)
#define SLANG_ASTNode_InferredMaxItersAttribute(x, param)     x(InferredMaxItersAttribute, Attribute, AST_MODIFIER, InferredMaxItersAttribute, AST, LEAF, param)
#define SLANG_ASTNode_LoopAttribute(x, param)     x(LoopAttribute, Attribute, AST_MODIFIER, LoopAttribute, AST, LEAF, param)
#define SLANG_ASTNode_FastOptAttribute(x, param)     x(FastOptAttribute, Attribute, AST_MODIFIER, FastOptAttribute, AST, LEAF, param)
#define SLANG_ASTNode_AllowUAVConditionAttribute(x, param)     x(AllowUAVConditionAttribute, Attribute, AST_MODIFIER, AllowUAVConditionAttribute, AST, LEAF, param)
#define SLANG_ASTNode_BranchAttribute(x, param)     x(BranchAttribute, Attribute, AST_MODIFIER, BranchAttribute, AST, LEAF, param)
#define SLANG_ASTNode_FlattenAttribute(x, param)     x(FlattenAttribute, Attribute, AST_MODIFIER, FlattenAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ForceCaseAttribute(x, param)     x(ForceCaseAttribute, Attribute, AST_MODIFIER, ForceCaseAttribute, AST, LEAF, param)
#define SLANG_ASTNode_CallAttribute(x, param)     x(CallAttribute, Attribute, AST_MODIFIER, CallAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PushConstantAttribute(x, param)     x(PushConstantAttribute, Attribute, AST_MODIFIER, PushConstantAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ShaderRecordAttribute(x, param)     x(ShaderRecordAttribute, Attribute, AST_MODIFIER, ShaderRecordAttribute, AST, LEAF, param)
#define SLANG_ASTNode_GLSLBindingAttribute(x, param)     x(GLSLBindingAttribute, Attribute, AST_MODIFIER, GLSLBindingAttribute, AST, LEAF, param)
#define SLANG_ASTNode_GLSLSimpleIntegerLayoutAttribute(x, param)     x(GLSLSimpleIntegerLayoutAttribute, Attribute, AST_MODIFIER, GLSLIndexAttribute, AST, INNER, param)
#define SLANG_ASTNode_GLSLLocationAttribute(x, param)     x(GLSLLocationAttribute, GLSLSimpleIntegerLayoutAttribute, AST_MODIFIER, GLSLLocationAttribute, AST, LEAF, param)
#define SLANG_ASTNode_GLSLIndexAttribute(x, param)     x(GLSLIndexAttribute, GLSLSimpleIntegerLayoutAttribute, AST_MODIFIER, GLSLIndexAttribute, AST, LEAF, param)
#define SLANG_ASTNode_SPIRVInstructionOpAttribute(x, param)     x(SPIRVInstructionOpAttribute, Attribute, AST_MODIFIER, SPIRVInstructionOpAttribute, AST, LEAF, param)
#define SLANG_ASTNode_SPIRVTargetEnv13Attribute(x, param)     x(SPIRVTargetEnv13Attribute, Attribute, AST_MODIFIER, SPIRVTargetEnv13Attribute, AST, LEAF, param)
#define SLANG_ASTNode_DisableArrayFlatteningAttribute(x, param)     x(DisableArrayFlatteningAttribute, Attribute, AST_MODIFIER, DisableArrayFlatteningAttribute, AST, LEAF, param)
#define SLANG_ASTNode_GLSLLayoutLocalSizeAttribute(x, param)     x(GLSLLayoutLocalSizeAttribute, Attribute, AST_MODIFIER, GLSLLayoutLocalSizeAttribute, AST, LEAF, param)
#define SLANG_ASTNode_MaxTessFactorAttribute(x, param)     x(MaxTessFactorAttribute, Attribute, AST_MODIFIER, MaxTessFactorAttribute, AST, LEAF, param)
#define SLANG_ASTNode_OutputControlPointsAttribute(x, param)     x(OutputControlPointsAttribute, Attribute, AST_MODIFIER, OutputControlPointsAttribute, AST, LEAF, param)
#define SLANG_ASTNode_OutputTopologyAttribute(x, param)     x(OutputTopologyAttribute, Attribute, AST_MODIFIER, OutputTopologyAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PartitioningAttribute(x, param)     x(PartitioningAttribute, Attribute, AST_MODIFIER, PartitioningAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PatchConstantFuncAttribute(x, param)     x(PatchConstantFuncAttribute, Attribute, AST_MODIFIER, PatchConstantFuncAttribute, AST, LEAF, param)
#define SLANG_ASTNode_DomainAttribute(x, param)     x(DomainAttribute, Attribute, AST_MODIFIER, DomainAttribute, AST, LEAF, param)
#define SLANG_ASTNode_EarlyDepthStencilAttribute(x, param)     x(EarlyDepthStencilAttribute, Attribute, AST_MODIFIER, EarlyDepthStencilAttribute, AST, LEAF, param)
#define SLANG_ASTNode_NumThreadsAttribute(x, param)     x(NumThreadsAttribute, Attribute, AST_MODIFIER, NumThreadsAttribute, AST, LEAF, param)
#define SLANG_ASTNode_MaxVertexCountAttribute(x, param)     x(MaxVertexCountAttribute, Attribute, AST_MODIFIER, MaxVertexCountAttribute, AST, LEAF, param)
#define SLANG_ASTNode_InstanceAttribute(x, param)     x(InstanceAttribute, Attribute, AST_MODIFIER, InstanceAttribute, AST, LEAF, param)
#define SLANG_ASTNode_EntryPointAttribute(x, param)     x(EntryPointAttribute, Attribute, AST_MODIFIER, EntryPointAttribute, AST, LEAF, param)
#define SLANG_ASTNode_VulkanRayPayloadAttribute(x, param)     x(VulkanRayPayloadAttribute, Attribute, AST_MODIFIER, VulkanRayPayloadAttribute, AST, LEAF, param)
#define SLANG_ASTNode_VulkanCallablePayloadAttribute(x, param)     x(VulkanCallablePayloadAttribute, Attribute, AST_MODIFIER, VulkanCallablePayloadAttribute, AST, LEAF, param)
#define SLANG_ASTNode_VulkanHitAttributesAttribute(x, param)     x(VulkanHitAttributesAttribute, Attribute, AST_MODIFIER, VulkanHitAttributesAttribute, AST, LEAF, param)
#define SLANG_ASTNode_VulkanHitObjectAttributesAttribute(x, param)     x(VulkanHitObjectAttributesAttribute, Attribute, AST_MODIFIER, VulkanHitObjectAttributesAttribute, AST, LEAF, param)
#define SLANG_ASTNode_MutatingAttribute(x, param)     x(MutatingAttribute, Attribute, AST_MODIFIER, MutatingAttribute, AST, LEAF, param)
#define SLANG_ASTNode_NonmutatingAttribute(x, param)     x(NonmutatingAttribute, Attribute, AST_MODIFIER, NonmutatingAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ConstRefAttribute(x, param)     x(ConstRefAttribute, Attribute, AST_MODIFIER, ConstRefAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ReadNoneAttribute(x, param)     x(ReadNoneAttribute, Attribute, AST_MODIFIER, ReadNoneAttribute, AST, LEAF, param)
#define SLANG_ASTNode_FormatAttribute(x, param)     x(FormatAttribute, Attribute, AST_MODIFIER, FormatAttribute, AST, LEAF, param)
#define SLANG_ASTNode_AllowAttribute(x, param)     x(AllowAttribute, Attribute, AST_MODIFIER, AllowAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ExternAttribute(x, param)     x(ExternAttribute, Attribute, AST_MODIFIER, ExternAttribute, AST, LEAF, param)
#define SLANG_ASTNode_UnsafeForceInlineEarlyAttribute(x, param)     x(UnsafeForceInlineEarlyAttribute, Attribute, AST_MODIFIER, UnsafeForceInlineEarlyAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ForceInlineAttribute(x, param)     x(ForceInlineAttribute, Attribute, AST_MODIFIER, ForceInlineAttribute, AST, LEAF, param)
#define SLANG_ASTNode_InheritanceControlAttribute(x, param)     x(InheritanceControlAttribute, Attribute, AST_MODIFIER, SealedAttribute, AST, INNER, param)
#define SLANG_ASTNode_OpenAttribute(x, param)     x(OpenAttribute, InheritanceControlAttribute, AST_MODIFIER, OpenAttribute, AST, LEAF, param)
#define SLANG_ASTNode_SealedAttribute(x, param)     x(SealedAttribute, InheritanceControlAttribute, AST_MODIFIER, SealedAttribute, AST, LEAF, param)
#define SLANG_ASTNode_BuiltinAttribute(x, param)     x(BuiltinAttribute, Attribute, AST_MODIFIER, BuiltinAttribute, AST, LEAF, param)
#define SLANG_ASTNode_AnyValueSizeAttribute(x, param)     x(AnyValueSizeAttribute, Attribute, AST_MODIFIER, AnyValueSizeAttribute, AST, LEAF, param)
#define SLANG_ASTNode_OverloadRankAttribute(x, param)     x(OverloadRankAttribute, Attribute, AST_MODIFIER, OverloadRankAttribute, AST, LEAF, param)
#define SLANG_ASTNode_SpecializeAttribute(x, param)     x(SpecializeAttribute, Attribute, AST_MODIFIER, SpecializeAttribute, AST, LEAF, param)
#define SLANG_ASTNode_DifferentiableAttribute(x, param)     x(DifferentiableAttribute, Attribute, AST_MODIFIER, BackwardDifferentiableAttribute, AST, INNER, param)
#define SLANG_ASTNode_TreatAsDifferentiableAttribute(x, param)     x(TreatAsDifferentiableAttribute, DifferentiableAttribute, AST_MODIFIER, TreatAsDifferentiableAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ForwardDifferentiableAttribute(x, param)     x(ForwardDifferentiableAttribute, DifferentiableAttribute, AST_MODIFIER, ForwardDifferentiableAttribute, AST, LEAF, param)
#define SLANG_ASTNode_UserDefinedDerivativeAttribute(x, param)     x(UserDefinedDerivativeAttribute, DifferentiableAttribute, AST_MODIFIER, BackwardDerivativeAttribute, AST, INNER, param)
#define SLANG_ASTNode_ForwardDerivativeAttribute(x, param)     x(ForwardDerivativeAttribute, UserDefinedDerivativeAttribute, AST_MODIFIER, ForwardDerivativeAttribute, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDerivativeAttribute(x, param)     x(BackwardDerivativeAttribute, UserDefinedDerivativeAttribute, AST_MODIFIER, BackwardDerivativeAttribute, AST, LEAF, param)
#define SLANG_ASTNode_DerivativeOfAttribute(x, param)     x(DerivativeOfAttribute, DifferentiableAttribute, AST_MODIFIER, BackwardDerivativeOfAttribute, AST, INNER, param)
#define SLANG_ASTNode_ForwardDerivativeOfAttribute(x, param)     x(ForwardDerivativeOfAttribute, DerivativeOfAttribute, AST_MODIFIER, ForwardDerivativeOfAttribute, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDerivativeOfAttribute(x, param)     x(BackwardDerivativeOfAttribute, DerivativeOfAttribute, AST_MODIFIER, BackwardDerivativeOfAttribute, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDifferentiableAttribute(x, param)     x(BackwardDifferentiableAttribute, DifferentiableAttribute, AST_MODIFIER, BackwardDifferentiableAttribute, AST, LEAF, param)
#define SLANG_ASTNode_DllImportAttribute(x, param)     x(DllImportAttribute, Attribute, AST_MODIFIER, DllImportAttribute, AST, LEAF, param)
#define SLANG_ASTNode_DllExportAttribute(x, param)     x(DllExportAttribute, Attribute, AST_MODIFIER, DllExportAttribute, AST, LEAF, param)
#define SLANG_ASTNode_TorchEntryPointAttribute(x, param)     x(TorchEntryPointAttribute, Attribute, AST_MODIFIER, TorchEntryPointAttribute, AST, LEAF, param)
#define SLANG_ASTNode_CudaDeviceExportAttribute(x, param)     x(CudaDeviceExportAttribute, Attribute, AST_MODIFIER, CudaDeviceExportAttribute, AST, LEAF, param)
#define SLANG_ASTNode_CudaKernelAttribute(x, param)     x(CudaKernelAttribute, Attribute, AST_MODIFIER, CudaKernelAttribute, AST, LEAF, param)
#define SLANG_ASTNode_CudaHostAttribute(x, param)     x(CudaHostAttribute, Attribute, AST_MODIFIER, CudaHostAttribute, AST, LEAF, param)
#define SLANG_ASTNode_AutoPyBindCudaAttribute(x, param)     x(AutoPyBindCudaAttribute, Attribute, AST_MODIFIER, AutoPyBindCudaAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PyExportAttribute(x, param)     x(PyExportAttribute, Attribute, AST_MODIFIER, PyExportAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PreferRecomputeAttribute(x, param)     x(PreferRecomputeAttribute, Attribute, AST_MODIFIER, PreferRecomputeAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PreferCheckpointAttribute(x, param)     x(PreferCheckpointAttribute, Attribute, AST_MODIFIER, PreferCheckpointAttribute, AST, LEAF, param)
#define SLANG_ASTNode_DerivativeMemberAttribute(x, param)     x(DerivativeMemberAttribute, Attribute, AST_MODIFIER, DerivativeMemberAttribute, AST, LEAF, param)
#define SLANG_ASTNode_ComInterfaceAttribute(x, param)     x(ComInterfaceAttribute, Attribute, AST_MODIFIER, ComInterfaceAttribute, AST, LEAF, param)
#define SLANG_ASTNode_RequiresNVAPIAttribute(x, param)     x(RequiresNVAPIAttribute, Attribute, AST_MODIFIER, RequiresNVAPIAttribute, AST, LEAF, param)
#define SLANG_ASTNode_AlwaysFoldIntoUseSiteAttribute(x, param)     x(AlwaysFoldIntoUseSiteAttribute, Attribute, AST_MODIFIER, AlwaysFoldIntoUseSiteAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PrimalSubstituteAttribute(x, param)     x(PrimalSubstituteAttribute, Attribute, AST_MODIFIER, PrimalSubstituteAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PrimalSubstituteOfAttribute(x, param)     x(PrimalSubstituteOfAttribute, Attribute, AST_MODIFIER, PrimalSubstituteOfAttribute, AST, LEAF, param)
#define SLANG_ASTNode_NoDiffThisAttribute(x, param)     x(NoDiffThisAttribute, Attribute, AST_MODIFIER, NoDiffThisAttribute, AST, LEAF, param)
#define SLANG_ASTNode_NoInlineAttribute(x, param)     x(NoInlineAttribute, Attribute, AST_MODIFIER, NoInlineAttribute, AST, LEAF, param)
#define SLANG_ASTNode_PayloadAttribute(x, param)     x(PayloadAttribute, Attribute, AST_MODIFIER, PayloadAttribute, AST, LEAF, param)
#define SLANG_ASTNode_DeprecatedAttribute(x, param)     x(DeprecatedAttribute, Attribute, AST_MODIFIER, DeprecatedAttribute, AST, LEAF, param)
#define SLANG_ASTNode_NonCopyableTypeAttribute(x, param)     x(NonCopyableTypeAttribute, Attribute, AST_MODIFIER, NonCopyableTypeAttribute, AST, LEAF, param)
#define SLANG_ASTNode_NoSideEffectAttribute(x, param)     x(NoSideEffectAttribute, Attribute, AST_MODIFIER, NoSideEffectAttribute, AST, LEAF, param)
#define SLANG_ASTNode_KnownBuiltinAttribute(x, param)     x(KnownBuiltinAttribute, Attribute, AST_MODIFIER, KnownBuiltinAttribute, AST, LEAF, param)
#define SLANG_ASTNode_HLSLGeometryShaderInputPrimitiveTypeModifier(x, param)     x(HLSLGeometryShaderInputPrimitiveTypeModifier, Modifier, AST_MODIFIER, HLSLTriangleAdjModifier, AST, INNER, param)
#define SLANG_ASTNode_HLSLPointModifier(x, param)     x(HLSLPointModifier, HLSLGeometryShaderInputPrimitiveTypeModifier, AST_MODIFIER, HLSLPointModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLLineModifier(x, param)     x(HLSLLineModifier, HLSLGeometryShaderInputPrimitiveTypeModifier, AST_MODIFIER, HLSLLineModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLTriangleModifier(x, param)     x(HLSLTriangleModifier, HLSLGeometryShaderInputPrimitiveTypeModifier, AST_MODIFIER, HLSLTriangleModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLLineAdjModifier(x, param)     x(HLSLLineAdjModifier, HLSLGeometryShaderInputPrimitiveTypeModifier, AST_MODIFIER, HLSLLineAdjModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLTriangleAdjModifier(x, param)     x(HLSLTriangleAdjModifier, HLSLGeometryShaderInputPrimitiveTypeModifier, AST_MODIFIER, HLSLTriangleAdjModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLMeshShaderOutputModifier(x, param)     x(HLSLMeshShaderOutputModifier, Modifier, AST_MODIFIER, HLSLPrimitivesModifier, AST, INNER, param)
#define SLANG_ASTNode_HLSLVerticesModifier(x, param)     x(HLSLVerticesModifier, HLSLMeshShaderOutputModifier, AST_MODIFIER, HLSLVerticesModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLIndicesModifier(x, param)     x(HLSLIndicesModifier, HLSLMeshShaderOutputModifier, AST_MODIFIER, HLSLIndicesModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLPrimitivesModifier(x, param)     x(HLSLPrimitivesModifier, HLSLMeshShaderOutputModifier, AST_MODIFIER, HLSLPrimitivesModifier, AST, LEAF, param)
#define SLANG_ASTNode_HLSLPayloadModifier(x, param)     x(HLSLPayloadModifier, Modifier, AST_MODIFIER, HLSLPayloadModifier, AST, LEAF, param)
#define SLANG_ASTNode_ImplicitConversionModifier(x, param)     x(ImplicitConversionModifier, Modifier, AST_MODIFIER, ImplicitConversionModifier, AST, LEAF, param)
#define SLANG_ASTNode_NVAPIMagicModifier(x, param)     x(NVAPIMagicModifier, Modifier, AST_MODIFIER, NVAPIMagicModifier, AST, LEAF, param)
#define SLANG_ASTNode_NVAPISlotModifier(x, param)     x(NVAPISlotModifier, Modifier, AST_MODIFIER, NVAPISlotModifier, AST, LEAF, param)
#define SLANG_ASTNode_TypeModifier(x, param)     x(TypeModifier, Modifier, AST_MODIFIER, NoDiffModifier, AST, INNER, param)
#define SLANG_ASTNode_WrappingTypeModifier(x, param)     x(WrappingTypeModifier, TypeModifier, AST_MODIFIER, GLSLBufferModifier, AST, INNER, param)
#define SLANG_ASTNode_GLSLBufferModifier(x, param)     x(GLSLBufferModifier, WrappingTypeModifier, AST_MODIFIER, GLSLBufferModifier, AST, LEAF, param)
#define SLANG_ASTNode_ResourceElementFormatModifier(x, param)     x(ResourceElementFormatModifier, TypeModifier, AST_MODIFIER, SNormModifier, AST, INNER, param)
#define SLANG_ASTNode_UNormModifier(x, param)     x(UNormModifier, ResourceElementFormatModifier, AST_MODIFIER, UNormModifier, AST, LEAF, param)
#define SLANG_ASTNode_SNormModifier(x, param)     x(SNormModifier, ResourceElementFormatModifier, AST_MODIFIER, SNormModifier, AST, LEAF, param)
#define SLANG_ASTNode_NoDiffModifier(x, param)     x(NoDiffModifier, TypeModifier, AST_MODIFIER, NoDiffModifier, AST, LEAF, param)
#define SLANG_ASTNode_BitFieldModifier(x, param)     x(BitFieldModifier, Modifier, AST_MODIFIER, BitFieldModifier, AST, LEAF, param)
#define SLANG_ASTNode_DynamicUniformModifier(x, param)     x(DynamicUniformModifier, Modifier, AST_MODIFIER, DynamicUniformModifier, AST, LEAF, param)
#define SLANG_ASTNode_ModifiableSyntaxNode(x, param)     x(ModifiableSyntaxNode, SyntaxNode, AST_BASE, ExpressionStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_DeclBase(x, param)     x(DeclBase, ModifiableSyntaxNode, AST_BASE, DeclGroup, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_Decl(x, param)     x(Decl, DeclBase, AST_BASE, SyntaxDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_UnresolvedDecl(x, param)     x(UnresolvedDecl, Decl, AST_DECL, UnresolvedDecl, AST, LEAF, param)
#define SLANG_ASTNode_ContainerDecl(x, param)     x(ContainerDecl, Decl, AST_DECL, AttributeDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_AggTypeDeclBase(x, param)     x(AggTypeDeclBase, ContainerDecl, AST_DECL, GlobalGenericParamDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_ExtensionDecl(x, param)     x(ExtensionDecl, AggTypeDeclBase, AST_DECL, ExtensionDecl, AST, LEAF, param)
#define SLANG_ASTNode_AggTypeDecl(x, param)     x(AggTypeDecl, AggTypeDeclBase, AST_DECL, GlobalGenericParamDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_StructDecl(x, param)     x(StructDecl, AggTypeDecl, AST_DECL, StructDecl, AST, LEAF, param)
#define SLANG_ASTNode_ClassDecl(x, param)     x(ClassDecl, AggTypeDecl, AST_DECL, ClassDecl, AST, LEAF, param)
#define SLANG_ASTNode_GLSLInterfaceBlockDecl(x, param)     x(GLSLInterfaceBlockDecl, AggTypeDecl, AST_DECL, GLSLInterfaceBlockDecl, AST, LEAF, param)
#define SLANG_ASTNode_EnumDecl(x, param)     x(EnumDecl, AggTypeDecl, AST_DECL, EnumDecl, AST, LEAF, param)
#define SLANG_ASTNode_ThisTypeDecl(x, param)     x(ThisTypeDecl, AggTypeDecl, AST_DECL, ThisTypeDecl, AST, LEAF, param)
#define SLANG_ASTNode_InterfaceDecl(x, param)     x(InterfaceDecl, AggTypeDecl, AST_DECL, InterfaceDecl, AST, LEAF, param)
#define SLANG_ASTNode_AssocTypeDecl(x, param)     x(AssocTypeDecl, AggTypeDecl, AST_DECL, AssocTypeDecl, AST, LEAF, param)
#define SLANG_ASTNode_GlobalGenericParamDecl(x, param)     x(GlobalGenericParamDecl, AggTypeDecl, AST_DECL, GlobalGenericParamDecl, AST, LEAF, param)
#define SLANG_ASTNode_ScopeDecl(x, param)     x(ScopeDecl, ContainerDecl, AST_DECL, ScopeDecl, AST, LEAF, param)
#define SLANG_ASTNode_CallableDecl(x, param)     x(CallableDecl, ContainerDecl, AST_DECL, SubscriptDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_FunctionDeclBase(x, param)     x(FunctionDeclBase, CallableDecl, AST_DECL, DerivativeRequirementReferenceDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_ConstructorDecl(x, param)     x(ConstructorDecl, FunctionDeclBase, AST_DECL, ConstructorDecl, AST, LEAF, param)
#define SLANG_ASTNode_AccessorDecl(x, param)     x(AccessorDecl, FunctionDeclBase, AST_DECL, RefAccessorDecl, AST, INNER, param)
#define SLANG_ASTNode_GetterDecl(x, param)     x(GetterDecl, AccessorDecl, AST_DECL, GetterDecl, AST, LEAF, param)
#define SLANG_ASTNode_SetterDecl(x, param)     x(SetterDecl, AccessorDecl, AST_DECL, SetterDecl, AST, LEAF, param)
#define SLANG_ASTNode_RefAccessorDecl(x, param)     x(RefAccessorDecl, AccessorDecl, AST_DECL, RefAccessorDecl, AST, LEAF, param)
#define SLANG_ASTNode_FuncDecl(x, param)     x(FuncDecl, FunctionDeclBase, AST_DECL, FuncDecl, AST, LEAF, param)
#define SLANG_ASTNode_DerivativeRequirementDecl(x, param)     x(DerivativeRequirementDecl, FunctionDeclBase, AST_DECL, BackwardDerivativeRequirementDecl, AST, INNER, param)
#define SLANG_ASTNode_ForwardDerivativeRequirementDecl(x, param)     x(ForwardDerivativeRequirementDecl, DerivativeRequirementDecl, AST_DECL, ForwardDerivativeRequirementDecl, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDerivativeRequirementDecl(x, param)     x(BackwardDerivativeRequirementDecl, DerivativeRequirementDecl, AST_DECL, BackwardDerivativeRequirementDecl, AST, LEAF, param)
#define SLANG_ASTNode_DerivativeRequirementReferenceDecl(x, param)     x(DerivativeRequirementReferenceDecl, FunctionDeclBase, AST_DECL, DerivativeRequirementReferenceDecl, AST, LEAF, param)
#define SLANG_ASTNode_SubscriptDecl(x, param)     x(SubscriptDecl, CallableDecl, AST_DECL, SubscriptDecl, AST, LEAF, param)
#define SLANG_ASTNode_PropertyDecl(x, param)     x(PropertyDecl, ContainerDecl, AST_DECL, PropertyDecl, AST, LEAF, param)
#define SLANG_ASTNode_NamespaceDeclBase(x, param)     x(NamespaceDeclBase, ContainerDecl, AST_DECL, ModuleDecl, AST, INNER, param)
#define SLANG_ASTNode_NamespaceDecl(x, param)     x(NamespaceDecl, NamespaceDeclBase, AST_DECL, NamespaceDecl, AST, LEAF, param)
#define SLANG_ASTNode_ModuleDecl(x, param)     x(ModuleDecl, NamespaceDeclBase, AST_DECL, ModuleDecl, AST, LEAF, param)
#define SLANG_ASTNode_FileDecl(x, param)     x(FileDecl, ContainerDecl, AST_DECL, FileDecl, AST, LEAF, param)
#define SLANG_ASTNode_GenericDecl(x, param)     x(GenericDecl, ContainerDecl, AST_DECL, GenericDecl, AST, LEAF, param)
#define SLANG_ASTNode_AttributeDecl(x, param)     x(AttributeDecl, ContainerDecl, AST_DECL, AttributeDecl, AST, LEAF, param)
#define SLANG_ASTNode_VarDeclBase(x, param)     x(VarDeclBase, Decl, AST_DECL, GenericValueParamDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_VarDecl(x, param)     x(VarDecl, VarDeclBase, AST_DECL, LetDecl, AST, INNER, param)
#define SLANG_ASTNode_LetDecl(x, param)     x(LetDecl, VarDecl, AST_DECL, LetDecl, AST, LEAF, param)
#define SLANG_ASTNode_GlobalGenericValueParamDecl(x, param)     x(GlobalGenericValueParamDecl, VarDeclBase, AST_DECL, GlobalGenericValueParamDecl, AST, LEAF, param)
#define SLANG_ASTNode_ParamDecl(x, param)     x(ParamDecl, VarDeclBase, AST_DECL, ModernParamDecl, AST, INNER, param)
#define SLANG_ASTNode_ModernParamDecl(x, param)     x(ModernParamDecl, ParamDecl, AST_DECL, ModernParamDecl, AST, LEAF, param)
#define SLANG_ASTNode_GenericValueParamDecl(x, param)     x(GenericValueParamDecl, VarDeclBase, AST_DECL, GenericValueParamDecl, AST, LEAF, param)
#define SLANG_ASTNode_EnumCaseDecl(x, param)     x(EnumCaseDecl, Decl, AST_DECL, EnumCaseDecl, AST, LEAF, param)
#define SLANG_ASTNode_TypeConstraintDecl(x, param)     x(TypeConstraintDecl, Decl, AST_DECL, GenericTypeConstraintDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_ThisTypeConstraintDecl(x, param)     x(ThisTypeConstraintDecl, TypeConstraintDecl, AST_DECL, ThisTypeConstraintDecl, AST, LEAF, param)
#define SLANG_ASTNode_InheritanceDecl(x, param)     x(InheritanceDecl, TypeConstraintDecl, AST_DECL, InheritanceDecl, AST, LEAF, param)
#define SLANG_ASTNode_GenericTypeConstraintDecl(x, param)     x(GenericTypeConstraintDecl, TypeConstraintDecl, AST_DECL, GenericTypeConstraintDecl, AST, LEAF, param)
#define SLANG_ASTNode_SimpleTypeDecl(x, param)     x(SimpleTypeDecl, Decl, AST_DECL, GenericTypeParamDecl, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_TypeDefDecl(x, param)     x(TypeDefDecl, SimpleTypeDecl, AST_DECL, TypeAliasDecl, AST, INNER, param)
#define SLANG_ASTNode_TypeAliasDecl(x, param)     x(TypeAliasDecl, TypeDefDecl, AST_DECL, TypeAliasDecl, AST, LEAF, param)
#define SLANG_ASTNode_GenericTypeParamDecl(x, param)     x(GenericTypeParamDecl, SimpleTypeDecl, AST_DECL, GenericTypeParamDecl, AST, LEAF, param)
#define SLANG_ASTNode_UsingDecl(x, param)     x(UsingDecl, Decl, AST_DECL, UsingDecl, AST, LEAF, param)
#define SLANG_ASTNode_FileReferenceDeclBase(x, param)     x(FileReferenceDeclBase, Decl, AST_DECL, ImplementingDecl, AST, INNER, param)
#define SLANG_ASTNode_ImportDecl(x, param)     x(ImportDecl, FileReferenceDeclBase, AST_DECL, ImportDecl, AST, LEAF, param)
#define SLANG_ASTNode_IncludeDeclBase(x, param)     x(IncludeDeclBase, FileReferenceDeclBase, AST_DECL, ImplementingDecl, AST, INNER, param)
#define SLANG_ASTNode_IncludeDecl(x, param)     x(IncludeDecl, IncludeDeclBase, AST_DECL, IncludeDecl, AST, LEAF, param)
#define SLANG_ASTNode_ImplementingDecl(x, param)     x(ImplementingDecl, IncludeDeclBase, AST_DECL, ImplementingDecl, AST, LEAF, param)
#define SLANG_ASTNode_ModuleDeclarationDecl(x, param)     x(ModuleDeclarationDecl, Decl, AST_DECL, ModuleDeclarationDecl, AST, LEAF, param)
#define SLANG_ASTNode_RequireCapabilityDecl(x, param)     x(RequireCapabilityDecl, Decl, AST_DECL, RequireCapabilityDecl, AST, LEAF, param)
#define SLANG_ASTNode_EmptyDecl(x, param)     x(EmptyDecl, Decl, AST_DECL, EmptyDecl, AST, LEAF, param)
#define SLANG_ASTNode_SyntaxDecl(x, param)     x(SyntaxDecl, Decl, AST_DECL, SyntaxDecl, AST, LEAF, param)
#define SLANG_ASTNode_DeclGroup(x, param)     x(DeclGroup, DeclBase, AST_DECL, DeclGroup, AST, LEAF, param)
#define SLANG_ASTNode_Stmt(x, param)     x(Stmt, ModifiableSyntaxNode, AST_BASE, ExpressionStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_ScopeStmt(x, param)     x(ScopeStmt, Stmt, AST_STMT, CompileTimeForStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_BlockStmt(x, param)     x(BlockStmt, ScopeStmt, AST_STMT, BlockStmt, AST, LEAF, param)
#define SLANG_ASTNode_BreakableStmt(x, param)     x(BreakableStmt, ScopeStmt, AST_STMT, DoWhileStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_SwitchStmt(x, param)     x(SwitchStmt, BreakableStmt, AST_STMT, SwitchStmt, AST, LEAF, param)
#define SLANG_ASTNode_LoopStmt(x, param)     x(LoopStmt, BreakableStmt, AST_STMT, DoWhileStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_ForStmt(x, param)     x(ForStmt, LoopStmt, AST_STMT, UnscopedForStmt, AST, INNER, param)
#define SLANG_ASTNode_UnscopedForStmt(x, param)     x(UnscopedForStmt, ForStmt, AST_STMT, UnscopedForStmt, AST, LEAF, param)
#define SLANG_ASTNode_WhileStmt(x, param)     x(WhileStmt, LoopStmt, AST_STMT, WhileStmt, AST, LEAF, param)
#define SLANG_ASTNode_DoWhileStmt(x, param)     x(DoWhileStmt, LoopStmt, AST_STMT, DoWhileStmt, AST, LEAF, param)
#define SLANG_ASTNode_GpuForeachStmt(x, param)     x(GpuForeachStmt, ScopeStmt, AST_STMT, GpuForeachStmt, AST, LEAF, param)
#define SLANG_ASTNode_CompileTimeForStmt(x, param)     x(CompileTimeForStmt, ScopeStmt, AST_STMT, CompileTimeForStmt, AST, LEAF, param)
#define SLANG_ASTNode_SeqStmt(x, param)     x(SeqStmt, Stmt, AST_STMT, SeqStmt, AST, LEAF, param)
#define SLANG_ASTNode_LabelStmt(x, param)     x(LabelStmt, Stmt, AST_STMT, LabelStmt, AST, LEAF, param)
#define SLANG_ASTNode_UnparsedStmt(x, param)     x(UnparsedStmt, Stmt, AST_STMT, UnparsedStmt, AST, LEAF, param)
#define SLANG_ASTNode_EmptyStmt(x, param)     x(EmptyStmt, Stmt, AST_STMT, EmptyStmt, AST, LEAF, param)
#define SLANG_ASTNode_DiscardStmt(x, param)     x(DiscardStmt, Stmt, AST_STMT, DiscardStmt, AST, LEAF, param)
#define SLANG_ASTNode_DeclStmt(x, param)     x(DeclStmt, Stmt, AST_STMT, DeclStmt, AST, LEAF, param)
#define SLANG_ASTNode_IfStmt(x, param)     x(IfStmt, Stmt, AST_STMT, IfStmt, AST, LEAF, param)
#define SLANG_ASTNode_TargetCaseStmt(x, param)     x(TargetCaseStmt, Stmt, AST_STMT, TargetCaseStmt, AST, LEAF, param)
#define SLANG_ASTNode_TargetSwitchStmt(x, param)     x(TargetSwitchStmt, Stmt, AST_STMT, TargetSwitchStmt, AST, LEAF, param)
#define SLANG_ASTNode_IntrinsicAsmStmt(x, param)     x(IntrinsicAsmStmt, Stmt, AST_STMT, IntrinsicAsmStmt, AST, LEAF, param)
#define SLANG_ASTNode_ChildStmt(x, param)     x(ChildStmt, Stmt, AST_STMT, ContinueStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_CaseStmtBase(x, param)     x(CaseStmtBase, ChildStmt, AST_STMT, DefaultStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_CaseStmt(x, param)     x(CaseStmt, CaseStmtBase, AST_STMT, CaseStmt, AST, LEAF, param)
#define SLANG_ASTNode_DefaultStmt(x, param)     x(DefaultStmt, CaseStmtBase, AST_STMT, DefaultStmt, AST, LEAF, param)
#define SLANG_ASTNode_JumpStmt(x, param)     x(JumpStmt, ChildStmt, AST_STMT, ContinueStmt, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_BreakStmt(x, param)     x(BreakStmt, JumpStmt, AST_STMT, BreakStmt, AST, LEAF, param)
#define SLANG_ASTNode_ContinueStmt(x, param)     x(ContinueStmt, JumpStmt, AST_STMT, ContinueStmt, AST, LEAF, param)
#define SLANG_ASTNode_ReturnStmt(x, param)     x(ReturnStmt, Stmt, AST_STMT, ReturnStmt, AST, LEAF, param)
#define SLANG_ASTNode_ExpressionStmt(x, param)     x(ExpressionStmt, Stmt, AST_STMT, ExpressionStmt, AST, LEAF, param)
#define SLANG_ASTNode_Expr(x, param)     x(Expr, SyntaxNode, AST_BASE, SPIRVAsmExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_IncompleteExpr(x, param)     x(IncompleteExpr, Expr, AST_EXPR, IncompleteExpr, AST, LEAF, param)
#define SLANG_ASTNode_DeclRefExpr(x, param)     x(DeclRefExpr, Expr, AST_EXPR, StaticMemberExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_VarExpr(x, param)     x(VarExpr, DeclRefExpr, AST_EXPR, VarExpr, AST, LEAF, param)
#define SLANG_ASTNode_MemberExpr(x, param)     x(MemberExpr, DeclRefExpr, AST_EXPR, MemberExpr, AST, LEAF, param)
#define SLANG_ASTNode_StaticMemberExpr(x, param)     x(StaticMemberExpr, DeclRefExpr, AST_EXPR, StaticMemberExpr, AST, LEAF, param)
#define SLANG_ASTNode_OverloadedExpr(x, param)     x(OverloadedExpr, Expr, AST_EXPR, OverloadedExpr, AST, LEAF, param)
#define SLANG_ASTNode_OverloadedExpr2(x, param)     x(OverloadedExpr2, Expr, AST_EXPR, OverloadedExpr2, AST, LEAF, param)
#define SLANG_ASTNode_LiteralExpr(x, param)     x(LiteralExpr, Expr, AST_EXPR, StringLiteralExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_IntegerLiteralExpr(x, param)     x(IntegerLiteralExpr, LiteralExpr, AST_EXPR, IntegerLiteralExpr, AST, LEAF, param)
#define SLANG_ASTNode_FloatingPointLiteralExpr(x, param)     x(FloatingPointLiteralExpr, LiteralExpr, AST_EXPR, FloatingPointLiteralExpr, AST, LEAF, param)
#define SLANG_ASTNode_BoolLiteralExpr(x, param)     x(BoolLiteralExpr, LiteralExpr, AST_EXPR, BoolLiteralExpr, AST, LEAF, param)
#define SLANG_ASTNode_NullPtrLiteralExpr(x, param)     x(NullPtrLiteralExpr, LiteralExpr, AST_EXPR, NullPtrLiteralExpr, AST, LEAF, param)
#define SLANG_ASTNode_NoneLiteralExpr(x, param)     x(NoneLiteralExpr, LiteralExpr, AST_EXPR, NoneLiteralExpr, AST, LEAF, param)
#define SLANG_ASTNode_StringLiteralExpr(x, param)     x(StringLiteralExpr, LiteralExpr, AST_EXPR, StringLiteralExpr, AST, LEAF, param)
#define SLANG_ASTNode_InitializerListExpr(x, param)     x(InitializerListExpr, Expr, AST_EXPR, InitializerListExpr, AST, LEAF, param)
#define SLANG_ASTNode_GetArrayLengthExpr(x, param)     x(GetArrayLengthExpr, Expr, AST_EXPR, GetArrayLengthExpr, AST, LEAF, param)
#define SLANG_ASTNode_ExprWithArgsBase(x, param)     x(ExprWithArgsBase, Expr, AST_EXPR, GenericAppExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_AggTypeCtorExpr(x, param)     x(AggTypeCtorExpr, ExprWithArgsBase, AST_EXPR, AggTypeCtorExpr, AST, LEAF, param)
#define SLANG_ASTNode_AppExprBase(x, param)     x(AppExprBase, ExprWithArgsBase, AST_EXPR, GenericAppExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_InvokeExpr(x, param)     x(InvokeExpr, AppExprBase, AST_EXPR, InOutImplicitCastExpr, AST, INNER, param)
#define SLANG_ASTNode_NewExpr(x, param)     x(NewExpr, InvokeExpr, AST_EXPR, NewExpr, AST, LEAF, param)
#define SLANG_ASTNode_OperatorExpr(x, param)     x(OperatorExpr, InvokeExpr, AST_EXPR, LogicOperatorShortCircuitExpr, AST, INNER, param)
#define SLANG_ASTNode_InfixExpr(x, param)     x(InfixExpr, OperatorExpr, AST_EXPR, InfixExpr, AST, LEAF, param)
#define SLANG_ASTNode_PrefixExpr(x, param)     x(PrefixExpr, OperatorExpr, AST_EXPR, PrefixExpr, AST, LEAF, param)
#define SLANG_ASTNode_PostfixExpr(x, param)     x(PostfixExpr, OperatorExpr, AST_EXPR, PostfixExpr, AST, LEAF, param)
#define SLANG_ASTNode_SelectExpr(x, param)     x(SelectExpr, OperatorExpr, AST_EXPR, SelectExpr, AST, LEAF, param)
#define SLANG_ASTNode_LogicOperatorShortCircuitExpr(x, param)     x(LogicOperatorShortCircuitExpr, OperatorExpr, AST_EXPR, LogicOperatorShortCircuitExpr, AST, LEAF, param)
#define SLANG_ASTNode_TypeCastExpr(x, param)     x(TypeCastExpr, InvokeExpr, AST_EXPR, InOutImplicitCastExpr, AST, INNER, param)
#define SLANG_ASTNode_ExplicitCastExpr(x, param)     x(ExplicitCastExpr, TypeCastExpr, AST_EXPR, ExplicitCastExpr, AST, LEAF, param)
#define SLANG_ASTNode_ImplicitCastExpr(x, param)     x(ImplicitCastExpr, TypeCastExpr, AST_EXPR, ImplicitCastExpr, AST, LEAF, param)
#define SLANG_ASTNode_LValueImplicitCastExpr(x, param)     x(LValueImplicitCastExpr, TypeCastExpr, AST_EXPR, InOutImplicitCastExpr, AST, INNER, param)
#define SLANG_ASTNode_OutImplicitCastExpr(x, param)     x(OutImplicitCastExpr, LValueImplicitCastExpr, AST_EXPR, OutImplicitCastExpr, AST, LEAF, param)
#define SLANG_ASTNode_InOutImplicitCastExpr(x, param)     x(InOutImplicitCastExpr, LValueImplicitCastExpr, AST_EXPR, InOutImplicitCastExpr, AST, LEAF, param)
#define SLANG_ASTNode_GenericAppExpr(x, param)     x(GenericAppExpr, AppExprBase, AST_EXPR, GenericAppExpr, AST, LEAF, param)
#define SLANG_ASTNode_TryExpr(x, param)     x(TryExpr, Expr, AST_EXPR, TryExpr, AST, LEAF, param)
#define SLANG_ASTNode_IndexExpr(x, param)     x(IndexExpr, Expr, AST_EXPR, IndexExpr, AST, LEAF, param)
#define SLANG_ASTNode_MatrixSwizzleExpr(x, param)     x(MatrixSwizzleExpr, Expr, AST_EXPR, MatrixSwizzleExpr, AST, LEAF, param)
#define SLANG_ASTNode_SwizzleExpr(x, param)     x(SwizzleExpr, Expr, AST_EXPR, SwizzleExpr, AST, LEAF, param)
#define SLANG_ASTNode_MakeRefExpr(x, param)     x(MakeRefExpr, Expr, AST_EXPR, MakeRefExpr, AST, LEAF, param)
#define SLANG_ASTNode_DerefExpr(x, param)     x(DerefExpr, Expr, AST_EXPR, DerefExpr, AST, LEAF, param)
#define SLANG_ASTNode_CastToSuperTypeExpr(x, param)     x(CastToSuperTypeExpr, Expr, AST_EXPR, CastToSuperTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_IsTypeExpr(x, param)     x(IsTypeExpr, Expr, AST_EXPR, IsTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_AsTypeExpr(x, param)     x(AsTypeExpr, Expr, AST_EXPR, AsTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_SizeOfLikeExpr(x, param)     x(SizeOfLikeExpr, Expr, AST_EXPR, AlignOfExpr, AST, INNER, param)
#define SLANG_ASTNode_SizeOfExpr(x, param)     x(SizeOfExpr, SizeOfLikeExpr, AST_EXPR, SizeOfExpr, AST, LEAF, param)
#define SLANG_ASTNode_AlignOfExpr(x, param)     x(AlignOfExpr, SizeOfLikeExpr, AST_EXPR, AlignOfExpr, AST, LEAF, param)
#define SLANG_ASTNode_MakeOptionalExpr(x, param)     x(MakeOptionalExpr, Expr, AST_EXPR, MakeOptionalExpr, AST, LEAF, param)
#define SLANG_ASTNode_ModifierCastExpr(x, param)     x(ModifierCastExpr, Expr, AST_EXPR, ModifierCastExpr, AST, LEAF, param)
#define SLANG_ASTNode_SharedTypeExpr(x, param)     x(SharedTypeExpr, Expr, AST_EXPR, SharedTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_AssignExpr(x, param)     x(AssignExpr, Expr, AST_EXPR, AssignExpr, AST, LEAF, param)
#define SLANG_ASTNode_ParenExpr(x, param)     x(ParenExpr, Expr, AST_EXPR, ParenExpr, AST, LEAF, param)
#define SLANG_ASTNode_ThisExpr(x, param)     x(ThisExpr, Expr, AST_EXPR, ThisExpr, AST, LEAF, param)
#define SLANG_ASTNode_ReturnValExpr(x, param)     x(ReturnValExpr, Expr, AST_EXPR, ReturnValExpr, AST, LEAF, param)
#define SLANG_ASTNode_LetExpr(x, param)     x(LetExpr, Expr, AST_EXPR, LetExpr, AST, LEAF, param)
#define SLANG_ASTNode_ExtractExistentialValueExpr(x, param)     x(ExtractExistentialValueExpr, Expr, AST_EXPR, ExtractExistentialValueExpr, AST, LEAF, param)
#define SLANG_ASTNode_OpenRefExpr(x, param)     x(OpenRefExpr, Expr, AST_EXPR, OpenRefExpr, AST, LEAF, param)
#define SLANG_ASTNode_HigherOrderInvokeExpr(x, param)     x(HigherOrderInvokeExpr, Expr, AST_EXPR, DispatchKernelExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_PrimalSubstituteExpr(x, param)     x(PrimalSubstituteExpr, HigherOrderInvokeExpr, AST_EXPR, PrimalSubstituteExpr, AST, LEAF, param)
#define SLANG_ASTNode_DifferentiateExpr(x, param)     x(DifferentiateExpr, HigherOrderInvokeExpr, AST_EXPR, BackwardDifferentiateExpr, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_ForwardDifferentiateExpr(x, param)     x(ForwardDifferentiateExpr, DifferentiateExpr, AST_EXPR, ForwardDifferentiateExpr, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDifferentiateExpr(x, param)     x(BackwardDifferentiateExpr, DifferentiateExpr, AST_EXPR, BackwardDifferentiateExpr, AST, LEAF, param)
#define SLANG_ASTNode_DispatchKernelExpr(x, param)     x(DispatchKernelExpr, HigherOrderInvokeExpr, AST_EXPR, DispatchKernelExpr, AST, LEAF, param)
#define SLANG_ASTNode_TreatAsDifferentiableExpr(x, param)     x(TreatAsDifferentiableExpr, Expr, AST_EXPR, TreatAsDifferentiableExpr, AST, LEAF, param)
#define SLANG_ASTNode_ThisTypeExpr(x, param)     x(ThisTypeExpr, Expr, AST_EXPR, ThisTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_AndTypeExpr(x, param)     x(AndTypeExpr, Expr, AST_EXPR, AndTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_ModifiedTypeExpr(x, param)     x(ModifiedTypeExpr, Expr, AST_EXPR, ModifiedTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_PointerTypeExpr(x, param)     x(PointerTypeExpr, Expr, AST_EXPR, PointerTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_FuncTypeExpr(x, param)     x(FuncTypeExpr, Expr, AST_EXPR, FuncTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_TupleTypeExpr(x, param)     x(TupleTypeExpr, Expr, AST_EXPR, TupleTypeExpr, AST, LEAF, param)
#define SLANG_ASTNode_PartiallyAppliedGenericExpr(x, param)     x(PartiallyAppliedGenericExpr, Expr, AST_EXPR, PartiallyAppliedGenericExpr, AST, LEAF, param)
#define SLANG_ASTNode_SPIRVAsmExpr(x, param)     x(SPIRVAsmExpr, Expr, AST_EXPR, SPIRVAsmExpr, AST, LEAF, param)
#define SLANG_ASTNode_Val(x, param)     x(Val, NodeBase, AST_BASE, BackwardDifferentiatePropagateVal, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_Type(x, param)     x(Type, Val, AST_BASE, ModifiedType, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_OverloadGroupType(x, param)     x(OverloadGroupType, Type, AST_TYPE, OverloadGroupType, AST, LEAF, param)
#define SLANG_ASTNode_InitializerListType(x, param)     x(InitializerListType, Type, AST_TYPE, InitializerListType, AST, LEAF, param)
#define SLANG_ASTNode_ErrorType(x, param)     x(ErrorType, Type, AST_TYPE, ErrorType, AST, LEAF, param)
#define SLANG_ASTNode_BottomType(x, param)     x(BottomType, Type, AST_TYPE, BottomType, AST, LEAF, param)
#define SLANG_ASTNode_DeclRefType(x, param)     x(DeclRefType, Type, AST_TYPE, ThisType, AST, INNER, param)
#define SLANG_ASTNode_ArithmeticExpressionType(x, param)     x(ArithmeticExpressionType, DeclRefType, AST_TYPE, MatrixExpressionType, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_BasicExpressionType(x, param)     x(BasicExpressionType, ArithmeticExpressionType, AST_TYPE, BasicExpressionType, AST, LEAF, param)
#define SLANG_ASTNode_DifferentialPairType(x, param)     x(DifferentialPairType, ArithmeticExpressionType, AST_TYPE, DifferentialPairType, AST, LEAF, param)
#define SLANG_ASTNode_VectorExpressionType(x, param)     x(VectorExpressionType, ArithmeticExpressionType, AST_TYPE, VectorExpressionType, AST, LEAF, param)
#define SLANG_ASTNode_MatrixExpressionType(x, param)     x(MatrixExpressionType, ArithmeticExpressionType, AST_TYPE, MatrixExpressionType, AST, LEAF, param)
#define SLANG_ASTNode_BuiltinType(x, param)     x(BuiltinType, DeclRefType, AST_TYPE, NativeRefType, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_FeedbackType(x, param)     x(FeedbackType, BuiltinType, AST_TYPE, FeedbackType, AST, LEAF, param)
#define SLANG_ASTNode_TextureShapeType(x, param)     x(TextureShapeType, BuiltinType, AST_TYPE, TextureShapeBufferType, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_TextureShape1DType(x, param)     x(TextureShape1DType, TextureShapeType, AST_TYPE, TextureShape1DType, AST, LEAF, param)
#define SLANG_ASTNode_TextureShape2DType(x, param)     x(TextureShape2DType, TextureShapeType, AST_TYPE, TextureShape2DType, AST, LEAF, param)
#define SLANG_ASTNode_TextureShape3DType(x, param)     x(TextureShape3DType, TextureShapeType, AST_TYPE, TextureShape3DType, AST, LEAF, param)
#define SLANG_ASTNode_TextureShapeCubeType(x, param)     x(TextureShapeCubeType, TextureShapeType, AST_TYPE, TextureShapeCubeType, AST, LEAF, param)
#define SLANG_ASTNode_TextureShapeBufferType(x, param)     x(TextureShapeBufferType, TextureShapeType, AST_TYPE, TextureShapeBufferType, AST, LEAF, param)
#define SLANG_ASTNode_ResourceType(x, param)     x(ResourceType, BuiltinType, AST_TYPE, GLSLImageType, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_TextureTypeBase(x, param)     x(TextureTypeBase, ResourceType, AST_TYPE, GLSLImageType, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_TextureType(x, param)     x(TextureType, TextureTypeBase, AST_TYPE, TextureType, AST, LEAF, param)
#define SLANG_ASTNode_GLSLImageType(x, param)     x(GLSLImageType, TextureTypeBase, AST_TYPE, GLSLImageType, AST, LEAF, param)
#define SLANG_ASTNode_SamplerStateType(x, param)     x(SamplerStateType, BuiltinType, AST_TYPE, SamplerStateType, AST, LEAF, param)
#define SLANG_ASTNode_BuiltinGenericType(x, param)     x(BuiltinGenericType, BuiltinType, AST_TYPE, PrimitivesType, AST, INNER, param)
#define SLANG_ASTNode_PointerLikeType(x, param)     x(PointerLikeType, BuiltinGenericType, AST_TYPE, GLSLShaderStorageBufferType, AST, INNER, param)
#define SLANG_ASTNode_ParameterGroupType(x, param)     x(ParameterGroupType, PointerLikeType, AST_TYPE, GLSLOutputParameterGroupType, AST, INNER, param)
#define SLANG_ASTNode_UniformParameterGroupType(x, param)     x(UniformParameterGroupType, ParameterGroupType, AST_TYPE, ParameterBlockType, AST, INNER, param)
#define SLANG_ASTNode_ConstantBufferType(x, param)     x(ConstantBufferType, UniformParameterGroupType, AST_TYPE, ConstantBufferType, AST, LEAF, param)
#define SLANG_ASTNode_TextureBufferType(x, param)     x(TextureBufferType, UniformParameterGroupType, AST_TYPE, TextureBufferType, AST, LEAF, param)
#define SLANG_ASTNode_ParameterBlockType(x, param)     x(ParameterBlockType, UniformParameterGroupType, AST_TYPE, ParameterBlockType, AST, LEAF, param)
#define SLANG_ASTNode_VaryingParameterGroupType(x, param)     x(VaryingParameterGroupType, ParameterGroupType, AST_TYPE, GLSLOutputParameterGroupType, AST, INNER, param)
#define SLANG_ASTNode_GLSLInputParameterGroupType(x, param)     x(GLSLInputParameterGroupType, VaryingParameterGroupType, AST_TYPE, GLSLInputParameterGroupType, AST, LEAF, param)
#define SLANG_ASTNode_GLSLOutputParameterGroupType(x, param)     x(GLSLOutputParameterGroupType, VaryingParameterGroupType, AST_TYPE, GLSLOutputParameterGroupType, AST, LEAF, param)
#define SLANG_ASTNode_GLSLShaderStorageBufferType(x, param)     x(GLSLShaderStorageBufferType, PointerLikeType, AST_TYPE, GLSLShaderStorageBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLStructuredBufferTypeBase(x, param)     x(HLSLStructuredBufferTypeBase, BuiltinGenericType, AST_TYPE, HLSLConsumeStructuredBufferType, AST, INNER, param)
#define SLANG_ASTNode_HLSLStructuredBufferType(x, param)     x(HLSLStructuredBufferType, HLSLStructuredBufferTypeBase, AST_TYPE, HLSLStructuredBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLRWStructuredBufferType(x, param)     x(HLSLRWStructuredBufferType, HLSLStructuredBufferTypeBase, AST_TYPE, HLSLRWStructuredBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLRasterizerOrderedStructuredBufferType(x, param)     x(HLSLRasterizerOrderedStructuredBufferType, HLSLStructuredBufferTypeBase, AST_TYPE, HLSLRasterizerOrderedStructuredBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLAppendStructuredBufferType(x, param)     x(HLSLAppendStructuredBufferType, HLSLStructuredBufferTypeBase, AST_TYPE, HLSLAppendStructuredBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLConsumeStructuredBufferType(x, param)     x(HLSLConsumeStructuredBufferType, HLSLStructuredBufferTypeBase, AST_TYPE, HLSLConsumeStructuredBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLStreamOutputType(x, param)     x(HLSLStreamOutputType, BuiltinGenericType, AST_TYPE, HLSLTriangleStreamType, AST, INNER, param)
#define SLANG_ASTNode_HLSLPointStreamType(x, param)     x(HLSLPointStreamType, HLSLStreamOutputType, AST_TYPE, HLSLPointStreamType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLLineStreamType(x, param)     x(HLSLLineStreamType, HLSLStreamOutputType, AST_TYPE, HLSLLineStreamType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLTriangleStreamType(x, param)     x(HLSLTriangleStreamType, HLSLStreamOutputType, AST_TYPE, HLSLTriangleStreamType, AST, LEAF, param)
#define SLANG_ASTNode_MeshOutputType(x, param)     x(MeshOutputType, BuiltinGenericType, AST_TYPE, PrimitivesType, AST, INNER, param)
#define SLANG_ASTNode_VerticesType(x, param)     x(VerticesType, MeshOutputType, AST_TYPE, VerticesType, AST, LEAF, param)
#define SLANG_ASTNode_IndicesType(x, param)     x(IndicesType, MeshOutputType, AST_TYPE, IndicesType, AST, LEAF, param)
#define SLANG_ASTNode_PrimitivesType(x, param)     x(PrimitivesType, MeshOutputType, AST_TYPE, PrimitivesType, AST, LEAF, param)
#define SLANG_ASTNode_UntypedBufferResourceType(x, param)     x(UntypedBufferResourceType, BuiltinType, AST_TYPE, RaytracingAccelerationStructureType, AST, INNER, param)
#define SLANG_ASTNode_HLSLByteAddressBufferType(x, param)     x(HLSLByteAddressBufferType, UntypedBufferResourceType, AST_TYPE, HLSLByteAddressBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLRWByteAddressBufferType(x, param)     x(HLSLRWByteAddressBufferType, UntypedBufferResourceType, AST_TYPE, HLSLRWByteAddressBufferType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLRasterizerOrderedByteAddressBufferType(x, param)     x(HLSLRasterizerOrderedByteAddressBufferType, UntypedBufferResourceType, AST_TYPE, HLSLRasterizerOrderedByteAddressBufferType, AST, LEAF, param)
#define SLANG_ASTNode_RaytracingAccelerationStructureType(x, param)     x(RaytracingAccelerationStructureType, UntypedBufferResourceType, AST_TYPE, RaytracingAccelerationStructureType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLPatchType(x, param)     x(HLSLPatchType, BuiltinType, AST_TYPE, HLSLOutputPatchType, AST, INNER, param)
#define SLANG_ASTNode_HLSLInputPatchType(x, param)     x(HLSLInputPatchType, HLSLPatchType, AST_TYPE, HLSLInputPatchType, AST, LEAF, param)
#define SLANG_ASTNode_HLSLOutputPatchType(x, param)     x(HLSLOutputPatchType, HLSLPatchType, AST_TYPE, HLSLOutputPatchType, AST, LEAF, param)
#define SLANG_ASTNode_GLSLInputAttachmentType(x, param)     x(GLSLInputAttachmentType, BuiltinType, AST_TYPE, GLSLInputAttachmentType, AST, LEAF, param)
#define SLANG_ASTNode_DifferentiableType(x, param)     x(DifferentiableType, BuiltinType, AST_TYPE, DifferentiableType, AST, LEAF, param)
#define SLANG_ASTNode_TensorViewType(x, param)     x(TensorViewType, BuiltinType, AST_TYPE, TensorViewType, AST, LEAF, param)
#define SLANG_ASTNode_StringTypeBase(x, param)     x(StringTypeBase, BuiltinType, AST_TYPE, NativeStringType, AST, INNER, param)
#define SLANG_ASTNode_StringType(x, param)     x(StringType, StringTypeBase, AST_TYPE, StringType, AST, LEAF, param)
#define SLANG_ASTNode_NativeStringType(x, param)     x(NativeStringType, StringTypeBase, AST_TYPE, NativeStringType, AST, LEAF, param)
#define SLANG_ASTNode_DynamicType(x, param)     x(DynamicType, BuiltinType, AST_TYPE, DynamicType, AST, LEAF, param)
#define SLANG_ASTNode_EnumTypeType(x, param)     x(EnumTypeType, BuiltinType, AST_TYPE, EnumTypeType, AST, LEAF, param)
#define SLANG_ASTNode_PtrTypeBase(x, param)     x(PtrTypeBase, BuiltinType, AST_TYPE, ConstRefType, AST, INNER, param)
#define SLANG_ASTNode_PtrType(x, param)     x(PtrType, PtrTypeBase, AST_TYPE, PtrType, AST, LEAF, param)
#define SLANG_ASTNode_ConstBufferPointerType(x, param)     x(ConstBufferPointerType, PtrTypeBase, AST_TYPE, ConstBufferPointerType, AST, LEAF, param)
#define SLANG_ASTNode_ParamDirectionType(x, param)     x(ParamDirectionType, PtrTypeBase, AST_TYPE, ConstRefType, AST, INNER, param)
#define SLANG_ASTNode_OutTypeBase(x, param)     x(OutTypeBase, ParamDirectionType, AST_TYPE, InOutType, AST, INNER, param)
#define SLANG_ASTNode_OutType(x, param)     x(OutType, OutTypeBase, AST_TYPE, OutType, AST, LEAF, param)
#define SLANG_ASTNode_InOutType(x, param)     x(InOutType, OutTypeBase, AST_TYPE, InOutType, AST, LEAF, param)
#define SLANG_ASTNode_RefTypeBase(x, param)     x(RefTypeBase, ParamDirectionType, AST_TYPE, ConstRefType, AST, INNER, param)
#define SLANG_ASTNode_RefType(x, param)     x(RefType, RefTypeBase, AST_TYPE, RefType, AST, LEAF, param)
#define SLANG_ASTNode_ConstRefType(x, param)     x(ConstRefType, RefTypeBase, AST_TYPE, ConstRefType, AST, LEAF, param)
#define SLANG_ASTNode_NoneType(x, param)     x(NoneType, BuiltinType, AST_TYPE, NoneType, AST, LEAF, param)
#define SLANG_ASTNode_NullPtrType(x, param)     x(NullPtrType, BuiltinType, AST_TYPE, NullPtrType, AST, LEAF, param)
#define SLANG_ASTNode_OptionalType(x, param)     x(OptionalType, BuiltinType, AST_TYPE, OptionalType, AST, LEAF, param)
#define SLANG_ASTNode_NativeRefType(x, param)     x(NativeRefType, BuiltinType, AST_TYPE, NativeRefType, AST, LEAF, param)
#define SLANG_ASTNode_ArrayExpressionType(x, param)     x(ArrayExpressionType, DeclRefType, AST_TYPE, ArrayExpressionType, AST, LEAF, param)
#define SLANG_ASTNode_ThisType(x, param)     x(ThisType, DeclRefType, AST_TYPE, ThisType, AST, LEAF, param)
#define SLANG_ASTNode_TypeType(x, param)     x(TypeType, Type, AST_TYPE, TypeType, AST, LEAF, param)
#define SLANG_ASTNode_NamedExpressionType(x, param)     x(NamedExpressionType, Type, AST_TYPE, NamedExpressionType, AST, LEAF, param)
#define SLANG_ASTNode_FuncType(x, param)     x(FuncType, Type, AST_TYPE, FuncType, AST, LEAF, param)
#define SLANG_ASTNode_TupleType(x, param)     x(TupleType, Type, AST_TYPE, TupleType, AST, LEAF, param)
#define SLANG_ASTNode_GenericDeclRefType(x, param)     x(GenericDeclRefType, Type, AST_TYPE, GenericDeclRefType, AST, LEAF, param)
#define SLANG_ASTNode_NamespaceType(x, param)     x(NamespaceType, Type, AST_TYPE, NamespaceType, AST, LEAF, param)
#define SLANG_ASTNode_ExtractExistentialType(x, param)     x(ExtractExistentialType, Type, AST_TYPE, ExtractExistentialType, AST, LEAF, param)
#define SLANG_ASTNode_ExistentialSpecializedType(x, param)     x(ExistentialSpecializedType, Type, AST_TYPE, ExistentialSpecializedType, AST, LEAF, param)
#define SLANG_ASTNode_AndType(x, param)     x(AndType, Type, AST_TYPE, AndType, AST, LEAF, param)
#define SLANG_ASTNode_ModifiedType(x, param)     x(ModifiedType, Type, AST_TYPE, ModifiedType, AST, LEAF, param)
#define SLANG_ASTNode_DeclRefBase(x, param)     x(DeclRefBase, Val, AST_BASE, GenericAppDeclRef, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_DirectDeclRef(x, param)     x(DirectDeclRef, DeclRefBase, AST_VAL, DirectDeclRef, AST, LEAF, param)
#define SLANG_ASTNode_MemberDeclRef(x, param)     x(MemberDeclRef, DeclRefBase, AST_VAL, MemberDeclRef, AST, LEAF, param)
#define SLANG_ASTNode_LookupDeclRef(x, param)     x(LookupDeclRef, DeclRefBase, AST_VAL, LookupDeclRef, AST, LEAF, param)
#define SLANG_ASTNode_GenericAppDeclRef(x, param)     x(GenericAppDeclRef, DeclRefBase, AST_VAL, GenericAppDeclRef, AST, LEAF, param)
#define SLANG_ASTNode_IntVal(x, param)     x(IntVal, Val, AST_VAL, ErrorIntVal, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_ConstantIntVal(x, param)     x(ConstantIntVal, IntVal, AST_VAL, ConstantIntVal, AST, LEAF, param)
#define SLANG_ASTNode_GenericParamIntVal(x, param)     x(GenericParamIntVal, IntVal, AST_VAL, GenericParamIntVal, AST, LEAF, param)
#define SLANG_ASTNode_TypeCastIntVal(x, param)     x(TypeCastIntVal, IntVal, AST_VAL, TypeCastIntVal, AST, LEAF, param)
#define SLANG_ASTNode_FuncCallIntVal(x, param)     x(FuncCallIntVal, IntVal, AST_VAL, FuncCallIntVal, AST, LEAF, param)
#define SLANG_ASTNode_WitnessLookupIntVal(x, param)     x(WitnessLookupIntVal, IntVal, AST_VAL, WitnessLookupIntVal, AST, LEAF, param)
#define SLANG_ASTNode_PolynomialIntVal(x, param)     x(PolynomialIntVal, IntVal, AST_VAL, PolynomialIntVal, AST, LEAF, param)
#define SLANG_ASTNode_ErrorIntVal(x, param)     x(ErrorIntVal, IntVal, AST_VAL, ErrorIntVal, AST, LEAF, param)
#define SLANG_ASTNode_PolynomialIntValFactor(x, param)     x(PolynomialIntValFactor, Val, AST_VAL, PolynomialIntValFactor, AST, LEAF, param)
#define SLANG_ASTNode_PolynomialIntValTerm(x, param)     x(PolynomialIntValTerm, Val, AST_VAL, PolynomialIntValTerm, AST, LEAF, param)
#define SLANG_ASTNode_Witness(x, param)     x(Witness, Val, AST_VAL, ExtractFromConjunctionSubtypeWitness, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_SubtypeWitness(x, param)     x(SubtypeWitness, Witness, AST_VAL, ExtractFromConjunctionSubtypeWitness, ABSTRACT_AST, INNER, param)
#define SLANG_ASTNode_TypeEqualityWitness(x, param)     x(TypeEqualityWitness, SubtypeWitness, AST_VAL, TypeEqualityWitness, AST, LEAF, param)
#define SLANG_ASTNode_DeclaredSubtypeWitness(x, param)     x(DeclaredSubtypeWitness, SubtypeWitness, AST_VAL, DeclaredSubtypeWitness, AST, LEAF, param)
#define SLANG_ASTNode_TransitiveSubtypeWitness(x, param)     x(TransitiveSubtypeWitness, SubtypeWitness, AST_VAL, TransitiveSubtypeWitness, AST, LEAF, param)
#define SLANG_ASTNode_ExtractExistentialSubtypeWitness(x, param)     x(ExtractExistentialSubtypeWitness, SubtypeWitness, AST_VAL, ExtractExistentialSubtypeWitness, AST, LEAF, param)
#define SLANG_ASTNode_DynamicSubtypeWitness(x, param)     x(DynamicSubtypeWitness, SubtypeWitness, AST_VAL, DynamicSubtypeWitness, AST, LEAF, param)
#define SLANG_ASTNode_ConjunctionSubtypeWitness(x, param)     x(ConjunctionSubtypeWitness, SubtypeWitness, AST_VAL, ConjunctionSubtypeWitness, AST, LEAF, param)
#define SLANG_ASTNode_ExtractFromConjunctionSubtypeWitness(x, param)     x(ExtractFromConjunctionSubtypeWitness, SubtypeWitness, AST_VAL, ExtractFromConjunctionSubtypeWitness, AST, LEAF, param)
#define SLANG_ASTNode_ModifierVal(x, param)     x(ModifierVal, Val, AST_VAL, NoDiffModifierVal, AST, INNER, param)
#define SLANG_ASTNode_TypeModifierVal(x, param)     x(TypeModifierVal, ModifierVal, AST_VAL, NoDiffModifierVal, AST, INNER, param)
#define SLANG_ASTNode_ResourceFormatModifierVal(x, param)     x(ResourceFormatModifierVal, TypeModifierVal, AST_VAL, SNormModifierVal, AST, INNER, param)
#define SLANG_ASTNode_UNormModifierVal(x, param)     x(UNormModifierVal, ResourceFormatModifierVal, AST_VAL, UNormModifierVal, AST, LEAF, param)
#define SLANG_ASTNode_SNormModifierVal(x, param)     x(SNormModifierVal, ResourceFormatModifierVal, AST_VAL, SNormModifierVal, AST, LEAF, param)
#define SLANG_ASTNode_NoDiffModifierVal(x, param)     x(NoDiffModifierVal, TypeModifierVal, AST_VAL, NoDiffModifierVal, AST, LEAF, param)
#define SLANG_ASTNode_DifferentiateVal(x, param)     x(DifferentiateVal, Val, AST_VAL, BackwardDifferentiatePropagateVal, AST, INNER, param)
#define SLANG_ASTNode_ForwardDifferentiateVal(x, param)     x(ForwardDifferentiateVal, DifferentiateVal, AST_VAL, ForwardDifferentiateVal, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDifferentiateVal(x, param)     x(BackwardDifferentiateVal, DifferentiateVal, AST_VAL, BackwardDifferentiateVal, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDifferentiateIntermediateTypeVal(x, param)     x(BackwardDifferentiateIntermediateTypeVal, DifferentiateVal, AST_VAL, BackwardDifferentiateIntermediateTypeVal, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDifferentiatePrimalVal(x, param)     x(BackwardDifferentiatePrimalVal, DifferentiateVal, AST_VAL, BackwardDifferentiatePrimalVal, AST, LEAF, param)
#define SLANG_ASTNode_BackwardDifferentiatePropagateVal(x, param)     x(BackwardDifferentiatePropagateVal, DifferentiateVal, AST_VAL, BackwardDifferentiatePropagateVal, AST, LEAF, param)
} // namespace Slang
