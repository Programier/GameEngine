#pragma once
#include <Core/engine_types.hpp>
#include <Core/export.hpp>
#include <ostream>

namespace Engine
{
    enum class KeyStatus : EnumerateType
    {
        Released = 0,
        JustReleased,
        JustPressed,
        Pressed,
        Repeat
    };

    enum class Key : EnumerateType
    {
        Unknown = 0,
        Space,
        Apostrophe,
        Comma,
        Minus,
        Period,
        Slash,
        Num0,
        Num1,
        Num2,
        Num3,
        Num4,
        Num5,
        Num6,
        Num7,
        Num8,
        Num9,
        Semicolon,
        Equal,
        A,
        B,
        C,
        D,
        E,
        F,
        G,
        H,
        I,
        J,
        K,
        L,
        M,
        N,
        O,
        P,
        Q,
        R,
        S,
        T,
        U,
        V,
        W,
        X,
        Y,
        Z,
        LeftBracket,
        Backslash,
        RightBracket,
        GraveAccent,
        Www,
        Escape,
        Enter,
        Tab,
        Backspace,
        Insert,
        Delete,
        Right,
        Left,
        Down,
        Up,
        PageUp,
        PageDown,
        Home,
        End,
        CapsLock,
        ScrollLock,
        NumLock,
        PrintScreen,
        Pause,
        F1,
        F2,
        F3,
        F4,
        F5,
        F6,
        F7,
        F8,
        F9,
        F10,
        F11,
        F12,
        F13,
        F14,
        F15,
        F16,
        F17,
        F18,
        F19,
        F20,
        F21,
        F22,
        F23,
        F24,
        Kp0,
        Kp1,
        Kp2,
        Kp3,
        Kp4,
        Kp5,
        Kp6,
        Kp7,
        Kp8,
        Kp9,
        KpDecimal,
        KpDivide,
        KpMultiply,
        KpSubtract,
        KpAdd,
        KpEnter,
        KpEqual,
        LeftShift,
        LeftControl,
        LeftAlt,
        LeftSuper,
        RightShift,
        RightControl,
        RightAlt,
        RightSuper,
        Menu,
        MouseLeft,
        MouseRight,
        MouseMiddle
    };


    ENGINE_EXPORT int to_SDL_scancode(const Key& key);
    ENGINE_EXPORT wchar_t to_character(const Key& key);
    ENGINE_EXPORT Key to_key(int);
    ENGINE_EXPORT const String& get_key_name(const Key& key);
    ENGINE_EXPORT std::ostream& operator<<(std::ostream& stream, const KeyStatus& status);
    ENGINE_EXPORT uint_t key_count();
}// namespace Engine
